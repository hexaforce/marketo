---
swagger: "2.0"
info:
  description: "Marketo Rest API"
  version: "1.0"
  title: "Marketo Rest API"
  termsOfService: "https://www.marketo.com/company/legal/"
  contact:
    name: "Marketo Developer Relations"
    url: "http://developers.marketo.com"
    email: "developerfeedback@marketo.com"
  license:
    name: "API License Agreement"
    url: "http://developers.marketo.com/api-license/"
host: "592-ING-004.mktorest.com"
basePath: "/"
tags:
- name: "Leads"
  description: "Leads Controller"
- name: "Sales Persons"
  description: "Sales Persons Controller"
- name: "Activities"
  description: "Activities Controller"
- name: "Bulk CustomObjects"
  description: "Bulk Custom Objects Controller"
- name: "Campaigns"
  description: "Campaigns Controller"
- name: "Opportunities"
  description: "Opportunities Controller"
- name: "Custom Objects"
  description: "Custom Objects Controller"
- name: "Usage"
  description: "Stats Controller"
- name: "Bulk Leads"
  description: "Bulk Leads Controller"
- name: "Static Lists"
  description: "Lists Controller"
- name: "Bulk Export Activities"
  description: "Bulk Export Activities Controller"
- name: "Named Account Lists"
  description: "Named Account Lists Controller"
- name: "Bulk Export Leads"
  description: "Bulk Export Leads Controller"
- name: "Companies"
  description: "Companies Controller"
- name: "Named Accounts"
  description: "Named Accounts Controller"
paths:
  /bulk/v1/activities/export.json:
    get:
      tags:
      - "Bulk Export Activities"
      summary: "Get Export Activity Jobs"
      description: "Returns a list of export jobs that were created in the past 7\
        \ days.  Required Permissions: Read-Only Activity"
      operationId: "getExportActivitiesUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "status"
        in: "query"
        description: "Comma separated list of statuses to filter on."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        enum:
        - "created"
        - "queued"
        - "processing"
        - "cancelled"
        - "completed"
        - "failed"
        x-exportParamName: "Status"
      - name: "batchSize"
        in: "query"
        description: "The batch size to return. The max and default value is 300."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "BatchSize"
      - name: "nextPageToken"
        in: "query"
        description: "A token will be returned by this endpoint if the result set\
          \ is greater than the batch size and can be passed in a subsequent call\
          \ through this parameter. See Paging Tokens for more info."
        required: false
        type: "string"
        x-exportParamName: "NextPageToken"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfExportResponseWithToken"
  /bulk/v1/activities/export/create.json:
    post:
      tags:
      - "Bulk Export Activities"
      summary: "Create Export Activity Job"
      description: "Create export job for search criteria defined via \"filter\" parameter.\
        \  Request returns the \"exportId\" which is passed as a parameter in subsequent\
        \ calls to Bulk Export Activities endpoints.  Use Enqueue Export Activity\
        \ Job endpoint to queue the export job for processing.  Use Get Export Activity\
        \ Job Status endpoint to retrieve status of export job.  Required Permissions:\
        \ Read-Only Activity"
      operationId: "createExportActivitiesUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "exportActivityRequest"
        description: "exportActivityRequest<br><br>ColumnHeaderNames: A JSON object\
          \ containing key-value pairs of field and column header names.<br>Example:<br><code>\"\
          columnHeaderNames\":{<br>  \"firstName\":\"First Name\",<br>  \"lastName\"\
          :\"Last Name\",<br>  \"email\":\"Email Address\"<br>}</code><br>"
        required: false
        schema:
          $ref: "#/definitions/ExportActivityRequest"
        x-exportParamName: "ExportActivityRequest"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfExportResponse"
  /bulk/v1/activities/export/{exportId}/cancel.json:
    post:
      tags:
      - "Bulk Export Activities"
      summary: "Cancel Export Activity Job"
      description: "Cancel export job.  Required Permissions: Read-Only Activity"
      operationId: "cancelExportActivitiesUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "exportId"
        in: "path"
        description: "Id of export batch job."
        required: true
        type: "string"
        x-exportParamName: "ExportId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfExportResponse"
  /bulk/v1/activities/export/{exportId}/enqueue.json:
    post:
      tags:
      - "Bulk Export Activities"
      summary: "Enqueue Export Activity Job"
      description: "Enqueue export job. This will place export job in queue, and will\
        \ start the job when computing resources become available.  The export job\
        \ must be in \"Created\" state.  Use Get Export Activity Job Status endpoint\
        \ to retrieve status of export job.  Required Permissions: Read-Only Activity"
      operationId: "enqueueExportActivitiesUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "exportId"
        in: "path"
        description: "Id of export batch job."
        required: true
        type: "string"
        x-exportParamName: "ExportId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfExportResponse"
  /bulk/v1/activities/export/{exportId}/file.json:
    get:
      tags:
      - "Bulk Export Activities"
      summary: "Get Export Activity File"
      description: "Returns the file content of an export job.  The export job must\
        \ be in \"Completed\" state.  Use Get Export Lead Job Status endpoint to retrieve\
        \ status of export job.  Required Permissions: Read-Only Activity<br><br>The\
        \ file format is specified by calling the Create Export Activity Job endpoint.\
        \ The following is an example of the default file format (\"CSV\"). Note that\
        \ the \"attributes\" field is formatted as JSON.<br><br><code>marketoGUID,leadId,activityDate,activityTypeId,campaignId,primaryAttributeValueId,primaryAttributeValue,\
        \ attributes</code><br><code>122323,6,2013-09-26T06:56:35+0000,12,11,6,Owyliphys\
        \ Iledil,[{\"name\":\"Source Type\",\"value\":\"Web page visit\"}]</code>"
      operationId: "getExportActivitiesFileUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "exportId"
        in: "path"
        description: "Id of export batch job."
        required: true
        type: "string"
        x-exportParamName: "ExportId"
      - name: "Range"
        in: "header"
        description: "To support partial retrieval of extracted data, the HTTP header\
          \ \"Range\" of type \"bytes\" may be specified.  See RFC 2616 \"Range Retrieval\
          \ Requests\" for more information. If the header is not set, the entire\
          \ contents will be returned."
        required: false
        type: "string"
        x-exportParamName: "Range_"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ObservableOfInputStreamRangeContent"
  /bulk/v1/activities/export/{exportId}/status.json:
    get:
      tags:
      - "Bulk Export Activities"
      summary: "Get Export Activity Job Status"
      description: "Returns status of an export job.  Job status is available for\
        \ 30 days after Completed or Failed status was reached. Required Permissions:\
        \ Read-Only Activity"
      operationId: "getExportActivitiesStatusUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "exportId"
        in: "path"
        description: "Id of export batch job."
        required: true
        type: "string"
        x-exportParamName: "ExportId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfExportResponse"
  /bulk/v1/customobjects/{apiName}/import.json:
    post:
      tags:
      - "Bulk CustomObjects"
      summary: "Import Custom Objects"
      description: "Imports a file containing data records into the target instance.\
        \  Required Permissions: Read-Write Custom Object"
      operationId: "importCustomObjectUsingPOST"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "apiName"
        in: "path"
        description: "API Name of the custom object for the import batch job."
        required: true
        type: "string"
        x-exportParamName: "ApiName"
      - name: "format"
        in: "query"
        description: "Import file format."
        required: true
        type: "string"
        enum:
        - "csv"
        - "tsv"
        - "ssv"
        x-exportParamName: "Format"
      - name: "file"
        in: "formData"
        description: "File containing the data records to import."
        required: true
        type: "file"
        x-exportParamName: "File"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfImportCustomObjectResponse"
  /bulk/v1/customobjects/{apiName}/import/{id}/failures.json:
    get:
      tags:
      - "Bulk CustomObjects"
      summary: "Get Import Custom Object Failures"
      description: "Returns the list of failures for the import batch job.  Required\
        \ Permissions: Read-Write Custom Object"
      operationId: "getImportCustomObjectFailuresUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "apiName"
        in: "path"
        description: "API Name of the custom object for the import batch job."
        required: true
        type: "string"
        x-exportParamName: "ApiName"
      - name: "id"
        in: "path"
        description: "Id of the import batch job."
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ObservableOfInputStreamContent"
  /bulk/v1/customobjects/{apiName}/import/{id}/status.json:
    get:
      tags:
      - "Bulk CustomObjects"
      summary: "Get Import Custom Object Status"
      description: "Returns the status of an import batch job.  Required Permissions:\
        \ Read-Write Custom Object"
      operationId: "getImportCustomObjectStatusUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "apiName"
        in: "path"
        description: "API Name of the custom object for the import batch job."
        required: true
        type: "string"
        x-exportParamName: "ApiName"
      - name: "id"
        in: "path"
        description: "Id of the import batch job."
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfImportCustomObjectResponse"
  /bulk/v1/customobjects/{apiName}/import/{id}/warnings.json:
    get:
      tags:
      - "Bulk CustomObjects"
      summary: "Get Import Custom Object Warnings"
      description: "Returns the list of warnings for the import batch job.  Required\
        \ Permissions: Read-Write Custom Object"
      operationId: "getImportCustomObjectWarningsUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "apiName"
        in: "path"
        description: "API Name of the custom object for the import batch job."
        required: true
        type: "string"
        x-exportParamName: "ApiName"
      - name: "id"
        in: "path"
        description: "Id of the import batch job."
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ObservableOfInputStreamContent"
  /bulk/v1/leads.json:
    post:
      tags:
      - "Bulk Leads"
      summary: "Import Leads"
      description: "Imports a file containing data records into the target instance.\
        \  Required Permissions: Read-Write Lead"
      operationId: "importLeadUsingPOST"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "format"
        in: "query"
        description: "Import file format."
        required: true
        type: "string"
        enum:
        - "csv"
        - "tsv"
        - "ssv"
        x-exportParamName: "Format"
      - name: "lookupField"
        in: "query"
        description: "Field to use for deduplication.  Custom fields (string, email,\
          \ integer), and the following field types are supported: id, cookies, email,\
          \ twitterId, facebookId, linkedInId, sfdcAccountId, sfdcContactId, sfdcLeadId,\
          \ sfdcLeadOwnerId, sfdcOpptyId.  Default is email.<br>Note: You can use\
          \ id for update only operations. "
        required: false
        type: "string"
        x-exportParamName: "LookupField"
      - name: "partitionName"
        in: "query"
        description: "Name of the lead partition to import to."
        required: false
        type: "string"
        x-exportParamName: "PartitionName"
      - name: "listId"
        in: "query"
        description: "Id of the static list to import into."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "ListId"
      - name: "file"
        in: "formData"
        description: "File containing the data records to import."
        required: true
        type: "file"
        x-exportParamName: "File"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfImportLeadResponse"
  /bulk/v1/leads/batch/{batchId}.json:
    get:
      tags:
      - "Bulk Leads"
      summary: "Get Import Lead Status"
      description: "Returns the status of an import batch job.  Required Permissions:\
        \ Read-Write Lead"
      operationId: "getImportLeadStatusUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "batchId"
        in: "path"
        description: "Id of the import batch job."
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "BatchId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfImportLeadResponse"
  /bulk/v1/leads/batch/{batchId}/failures.json:
    get:
      tags:
      - "Bulk Leads"
      summary: "Get Import Lead Failures"
      description: "Returns the list of failures for the import batch job.  Required\
        \ Permissions: Read-Write Lead"
      operationId: "getImportLeadFailuresUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "batchId"
        in: "path"
        description: "Id of the import batch job."
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "BatchId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ObservableOfInputStreamContent"
  /bulk/v1/leads/batch/{batchId}/warnings.json:
    get:
      tags:
      - "Bulk Leads"
      summary: "Get Import Lead Warnings"
      description: "Returns the list of warnings for the import batch job.  Required\
        \ Permissions: Read-Write Lead"
      operationId: "getImportLeadWarningsUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "batchId"
        in: "path"
        description: "Id of the import batch job."
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "BatchId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ObservableOfInputStreamContent"
  /bulk/v1/leads/export.json:
    get:
      tags:
      - "Bulk Export Leads"
      summary: "Get Export Lead Jobs"
      description: "Returns a list of export jobs that were created in the past 7\
        \ days.  Required Permissions: Read-Only Lead"
      operationId: "getExportLeadsUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "status"
        in: "query"
        description: "Comma separated list of statuses to filter on."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        enum:
        - "created"
        - "queued"
        - "processing"
        - "cancelled"
        - "completed"
        - "failed"
        x-exportParamName: "Status"
      - name: "batchSize"
        in: "query"
        description: "The batch size to return. The max and default value is 300."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "BatchSize"
      - name: "nextPageToken"
        in: "query"
        description: "A token will be returned by this endpoint if the result set\
          \ is greater than the batch size and can be passed in a subsequent call\
          \ through this parameter. See Paging Tokens for more info."
        required: false
        type: "string"
        x-exportParamName: "NextPageToken"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfExportResponseWithToken"
  /bulk/v1/leads/export/create.json:
    post:
      tags:
      - "Bulk Export Leads"
      summary: "Create Export Lead Job"
      description: "Create export job for search criteria defined via \"filter\" parameter.\
        \  Request returns the \"exportId\" which is passed as a parameter in subsequent\
        \ calls to Bulk Export Leads endpoints.  Use Enqueue Export Lead Job endpoint\
        \ to queue the export job for processing.  Use Get Export Lead Job Status\
        \ endpoint to retrieve status of export job.  Required Permissions: Read-Only\
        \ Lead"
      operationId: "createExportLeadsUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "exportLeadRequest"
        description: "exportLeadRequest<br><br>ColumnHeaderNames: A JSON object containing\
          \ key-value pairs of field and column header names.<br>Example:<br><code>\"\
          columnHeaderNames\":{<br>  \"firstName\":\"First Name\",<br>  \"lastName\"\
          :\"Last Name\",<br>  \"email\":\"Email Address\"<br>}</code><br>"
        required: false
        schema:
          $ref: "#/definitions/ExportLeadRequest"
        x-exportParamName: "ExportLeadRequest"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfExportResponse"
  /bulk/v1/leads/export/{exportId}/cancel.json:
    post:
      tags:
      - "Bulk Export Leads"
      summary: "Cancel Export Lead Job"
      description: "Cancel export job.  Required Permissions: Read-Only Lead"
      operationId: "cancelExportLeadsUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "exportId"
        in: "path"
        description: "Id of export batch job."
        required: true
        type: "string"
        x-exportParamName: "ExportId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfExportResponse"
  /bulk/v1/leads/export/{exportId}/enqueue.json:
    post:
      tags:
      - "Bulk Export Leads"
      summary: "Enqueue Export Lead Job"
      description: "Enqueue export job. This will place export job in queue, and will\
        \ start the job when computing resources become available.  The export job\
        \ must be in \"Created\" state.  Use Get Export Lead Job Status endpoint to\
        \ retrieve status of export job.  Required Permissions: Read-Only Lead"
      operationId: "enqueueExportLeadsUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "exportId"
        in: "path"
        description: "Id of export batch job."
        required: true
        type: "string"
        x-exportParamName: "ExportId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfExportResponse"
  /bulk/v1/leads/export/{exportId}/file.json:
    get:
      tags:
      - "Bulk Export Leads"
      summary: "Get Export Lead File"
      description: "Returns the file content of an export job.  The export job must\
        \ be in \"Completed\" state.  Use Get Export Lead Job Status endpoint to retrieve\
        \ status of export job.  Required Permissions: Read-Only Lead<br><br>The file\
        \ format is specified by calling the Create Export Lead Job endpoint. The\
        \ following is an example of the default file format (\"CSV\").<br><br><code>firstName,lastName,email</code><br><code>Ivanka,Trump,ivanka@invankatrump.com</code>"
      operationId: "getExportLeadsFileUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "exportId"
        in: "path"
        description: "Id of export batch job."
        required: true
        type: "string"
        x-exportParamName: "ExportId"
      - name: "Range"
        in: "header"
        description: "To support partial retrieval of extracted data, the HTTP header\
          \ \"Range\" of type \"bytes\" may be specified.  See RFC 2616 \"Range Retrieval\
          \ Requests\" for more information. If the header is not set, the entire\
          \ contents will be returned."
        required: false
        type: "string"
        x-exportParamName: "Range_"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ObservableOfInputStreamRangeContent"
  /bulk/v1/leads/export/{exportId}/status.json:
    get:
      tags:
      - "Bulk Export Leads"
      summary: "Get Export Lead Job Status"
      description: "Returns status of an export job.  Job status is available for\
        \ 30 days after Completed or Failed status was reached. Required Permissions:\
        \ Read-Only Lead"
      operationId: "getExportLeadsStatusUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "exportId"
        in: "path"
        description: "Id of export batch job."
        required: true
        type: "string"
        x-exportParamName: "ExportId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfExportResponse"
  /rest/v1/activities.json:
    get:
      tags:
      - "Activities"
      summary: "Get Lead Activities"
      description: "Returns a list of activities from after a datetime given by the\
        \ nextPageToken parameter.  Also allows for filtering by lead static list\
        \ membership, or by a list of up to 30 lead ids.  Required Permissions: Read-Only\
        \ Activity, Read-Write Activity"
      operationId: "getLeadActivitiesUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "nextPageToken"
        in: "query"
        description: "Token representation of a datetime returned by the Get Paging\
          \ Token endpoint.  This endpoint will return activities after this datetime"
        required: true
        type: "string"
        x-exportParamName: "NextPageToken"
      - name: "activityTypeIds"
        in: "query"
        description: "Comma-separated list of activity type ids. These can be retrieved\
          \ with the Get Activity Types API."
        required: true
        type: "array"
        items:
          type: "integer"
          format: "int32"
        collectionFormat: "multi"
        x-exportParamName: "ActivityTypeIds"
      - name: "assetIds"
        in: "query"
        description: "Id of the primary asset for an activity.  This is based on the\
          \ primary asset id of a given activity type.  Should only be used when a\
          \ single activity type is set"
        required: false
        type: "array"
        items:
          type: "integer"
          format: "int32"
        collectionFormat: "multi"
        x-exportParamName: "AssetIds"
      - name: "listId"
        in: "query"
        description: "Id of a static list.  If set, will only return activities of\
          \ members of this static list."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "ListId"
      - name: "leadIds"
        in: "query"
        description: "Comma-separated list of lead ids.  If set, will only return\
          \ activities of the leads with these ids.  Allows up to 30 entries."
        required: false
        type: "array"
        items:
          type: "integer"
          format: "int64"
        collectionFormat: "multi"
        x-exportParamName: "LeadIds"
      - name: "batchSize"
        in: "query"
        description: "Maximum number of records to return.  Maximum and default is\
          \ 300."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "BatchSize"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfActivity"
  /rest/v1/activities/deletedleads.json:
    get:
      tags:
      - "Activities"
      summary: "Get Deleted Leads"
      description: "Returns a list of leads deleted after a given datetime.  Deletions\
        \ greater than 30 days old may be pruned.  Required Permissions: Read-Only\
        \ Activity, Read-Write Activity"
      operationId: "getDeletedLeadsUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "nextPageToken"
        in: "query"
        description: "Token representation of a datetime returned by the Get Paging\
          \ Token endpoint.  This endpoint will return activities after this datetime"
        required: true
        type: "string"
        x-exportParamName: "NextPageToken"
      - name: "batchSize"
        in: "query"
        description: "Maximum number of records to return.  Maximum and default is\
          \ 300."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "BatchSize"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfActivity"
  /rest/v1/activities/external.json:
    post:
      tags:
      - "Activities"
      summary: "Add Custom Activities"
      description: "Allows insertion of custom activities associated to given lead\
        \ records.  Requires provisioning of custom activity types to utilize.  Required\
        \ Permissions: Read-Write Activity"
      operationId: "addCustomActivityUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "customActivityRequest"
        description: "customActivityRequest"
        required: true
        schema:
          $ref: "#/definitions/CustomActivityRequest"
        x-exportParamName: "CustomActivityRequest"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfCustomActivity"
  /rest/v1/activities/external/type.json:
    post:
      tags:
      - "Activities"
      summary: "Create Custom Activity Type"
      description: "Creates a new custom activity type draft in the target instance.\
        \  Required Permissions: Read-Write Activity Metadata"
      operationId: "createCustomActivityTypeUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "customActivityTypeRequest"
        description: "customActivityTypeRequest"
        required: true
        schema:
          $ref: "#/definitions/CustomActivityTypeRequest"
        x-exportParamName: "CustomActivityTypeRequest"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfCustomActivityType"
  /rest/v1/activities/external/type/{apiName}.json:
    post:
      tags:
      - "Activities"
      summary: "Update Custom Activity Type"
      description: "Updates the target custom activity type.  All changes are applied\
        \ to the draft version of the type.  Required Permissions: Read-Write Activity\
        \ Metadata"
      operationId: "updateCustomActivityTypeUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "apiName"
        in: "path"
        description: "API Name of the activity type"
        required: true
        type: "string"
        x-exportParamName: "ApiName"
      - in: "body"
        name: "customActivityTypeRequest"
        description: "customActivityTypeRequest"
        required: true
        schema:
          $ref: "#/definitions/CustomActivityTypeRequest"
        x-exportParamName: "CustomActivityTypeRequest"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfCustomActivityType"
  /rest/v1/activities/external/type/{apiName}/approve.json:
    post:
      tags:
      - "Activities"
      summary: "Approve Custom Activity Type"
      description: "Approves the current draft of the type, and makes it the live\
        \ version.  This will delete the current live version of the type.  Required\
        \ Permissions: Read-Write Activity Metadata"
      operationId: "approveCustomActivityTypeUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "apiName"
        in: "path"
        description: "API Name of the activity type"
        required: true
        type: "string"
        x-exportParamName: "ApiName"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfCustomActivityType"
  /rest/v1/activities/external/type/{apiName}/attributes/create.json:
    post:
      tags:
      - "Activities"
      summary: "Create Custom Activity Type Attributes"
      description: "Adds activity attributes to the target type.  These are added\
        \ to the draft version of the type.  Required Permissions: Read-Write Activity\
        \ Metadata"
      operationId: "createCustomActivityTypeAttributesUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "apiName"
        in: "path"
        description: "API Name of the activity type"
        required: true
        type: "string"
        x-exportParamName: "ApiName"
      - in: "body"
        name: "customActivityTypeAttributeRequest"
        description: "customActivityTypeAttributeRequest"
        required: true
        schema:
          $ref: "#/definitions/CustomActivityTypeAttributeRequest"
        x-exportParamName: "CustomActivityTypeAttributeRequest"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfCustomActivityType"
  /rest/v1/activities/external/type/{apiName}/attributes/delete.json:
    post:
      tags:
      - "Activities"
      summary: "Delete Custom Activity Type Attributes"
      description: "Deletes the target attributes from the custom activity type draft.\
        \  The apiName of each attribute is the primary key for the update.  Required\
        \ Permissions: Read-Write Activity Metadata"
      operationId: "deleteCustomActivityTypeAttributesUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "apiName"
        in: "path"
        description: "API Name of the activity type"
        required: true
        type: "string"
        x-exportParamName: "ApiName"
      - in: "body"
        name: "customActivityTypeAttributeRequest"
        description: "customActivityTypeAttributeRequest"
        required: true
        schema:
          $ref: "#/definitions/CustomActivityTypeAttributeRequest"
        x-exportParamName: "CustomActivityTypeAttributeRequest"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfCustomActivityType"
  /rest/v1/activities/external/type/{apiName}/attributes/update.json:
    post:
      tags:
      - "Activities"
      summary: "Update Custom Activity Type Attributes"
      description: "Updates the attributes of the custom activity type draft.  The\
        \ apiName of each attribute is the primary key for the update.  Required Permissions:\
        \ Read-Write Activity Metadata"
      operationId: "updateCustomActivityTypeAttributesUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "apiName"
        in: "path"
        description: "API Name of the activity type"
        required: true
        type: "string"
        x-exportParamName: "ApiName"
      - in: "body"
        name: "customActivityTypeAttributeRequest"
        description: "customActivityTypeAttributeRequest"
        required: true
        schema:
          $ref: "#/definitions/CustomActivityTypeAttributeRequest"
        x-exportParamName: "CustomActivityTypeAttributeRequest"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfCustomActivityType"
  /rest/v1/activities/external/type/{apiName}/delete.json:
    post:
      tags:
      - "Activities"
      summary: "Delete Custom Activity Type"
      description: "Deletes the target custom activity type.  The type must first\
        \ be removed from use by any assets, such as triggers or filters.  Required\
        \ Permissions: Read-Write Activity Metadata"
      operationId: "deleteCustomActivityTypeUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "apiName"
        in: "path"
        description: "API Name of the activity type"
        required: true
        type: "string"
        x-exportParamName: "ApiName"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfCustomActivityType"
  /rest/v1/activities/external/type/{apiName}/describe.json:
    get:
      tags:
      - "Activities"
      summary: "Describe Custom Activity Type"
      description: "Returns metadata for a specific custom activity type.  Required\
        \ Permissions: Read-Only Activity Metadata, Read-Write Activity Metadata"
      operationId: "describeCustomActivityTypeUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "apiName"
        in: "path"
        description: "API Name of the activity type"
        required: true
        type: "string"
        x-exportParamName: "ApiName"
      - name: "draft"
        in: "query"
        description: "draft"
        required: false
        type: "boolean"
        x-exportParamName: "Draft"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfCustomActivityType"
  /rest/v1/activities/external/type/{apiName}/discardDraft.json:
    post:
      tags:
      - "Activities"
      summary: "Discard Custom Activity Type Draft"
      description: "Discards the current draft of the custom activity type.  Required\
        \ Permissions: Read-Write Activity Metadata"
      operationId: "discardDraftofCustomActivityTypeUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "apiName"
        in: "path"
        description: "API Name of the activity type"
        required: true
        type: "string"
        x-exportParamName: "ApiName"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfCustomActivityType"
  /rest/v1/activities/external/types.json:
    get:
      tags:
      - "Activities"
      summary: "Get Custom Activity Types"
      description: "Returns metadata regarding custom activities provisioned in the\
        \ target instance.  Required Permissions: Read-Only Activity Metadata, Read-Write\
        \ Activity Metadata"
      operationId: "getCustomActivityTypeUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfCustomActivityType"
  /rest/v1/activities/leadchanges.json:
    get:
      tags:
      - "Activities"
      summary: "Get Lead Changes"
      description: "Returns a list of Data Value Changes and New Lead activities after\
        \ a given datetime. Required Permissions: Read-Only Activity, Read-Write Activity"
      operationId: "getLeadChangesUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "nextPageToken"
        in: "query"
        description: "Token representation of a datetime returned by the Get Paging\
          \ Token endpoint.  This endpoint will return activities after this datetime"
        required: true
        type: "string"
        x-exportParamName: "NextPageToken"
      - name: "fields"
        in: "query"
        description: "Comma-separated list of field names to return changes for. \
          \ Field names can be retrieved with the Describe Lead API."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Fields"
      - name: "listId"
        in: "query"
        description: "Id of a static list.  If set, will only return activities of\
          \ members of this static list."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "ListId"
      - name: "leadIds"
        in: "query"
        description: "Comma-separated list of lead ids.  If set, will only return\
          \ activities of the leads with these ids.  Allows up to 30 entries."
        required: false
        type: "array"
        items:
          type: "integer"
          format: "int64"
        collectionFormat: "multi"
        x-exportParamName: "LeadIds"
      - name: "batchSize"
        in: "query"
        description: "Maximum number of records to return.  Maximum and default is\
          \ 300."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "BatchSize"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfLeadChange"
  /rest/v1/activities/pagingtoken.json:
    get:
      tags:
      - "Activities"
      summary: "Get Paging Token"
      description: "Returns a paging token for use in retrieving activities and data\
        \ value changes.  Required Permissions: Read-Only Activity, Read-Write Activity"
      operationId: "getActivitiesPagingTokenUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "sinceDatetime"
        in: "query"
        description: "Earliest datetime to retrieve activities from"
        required: true
        type: "string"
        format: "date-time"
        x-exportParamName: "SinceDatetime"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfVoid"
  /rest/v1/activities/types.json:
    get:
      tags:
      - "Activities"
      summary: "Get Activity Types"
      description: "Returns a list of available activity types in the target instance,\
        \ along with associated metadata of each type.  Required Permissions: Read-Only\
        \ Activity, Read-Write Activity"
      operationId: "getAllActivityTypesUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfActivityType"
  /rest/v1/campaigns.json:
    get:
      tags:
      - "Campaigns"
      summary: "Get Campaigns"
      description: "Returns a list of campaign records.  Required Permissions: Read-Only\
        \ Campaigns, Read-Write Campaigns"
      operationId: "getCampaignsUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "query"
        description: "Comma-separated list of campaign ids to return records for"
        required: false
        type: "array"
        items:
          type: "integer"
          format: "int32"
        collectionFormat: "multi"
        x-exportParamName: "Id"
      - name: "name"
        in: "query"
        description: "Comma-separated list of names to filter on"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Name"
      - name: "programName"
        in: "query"
        description: "Comma-separated list of program names to filter on.  If set,\
          \ will filter to only campaigns which are children of the designated programs."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "ProgramName"
      - name: "workspaceName"
        in: "query"
        description: "Comma-separated list of workspace names to filter on.  If set,\
          \ will only return campaigns in the given workspaces."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "WorkspaceName"
      - name: "batchSize"
        in: "query"
        description: "Maximum number of records to return.  Maximum and default is\
          \ 300."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "BatchSize"
      - name: "nextPageToken"
        in: "query"
        description: "A token will be returned by this endpoint if the result set\
          \ is greater than the batch size and can be passed in a subsequent call\
          \ through this parameter.  See Paging Tokens for more info."
        required: false
        type: "string"
        x-exportParamName: "NextPageToken"
      - name: "isTriggerable"
        in: "query"
        description: "Set to true to return active Campaigns which have a Campaign\
          \ is Requested trigger and source is Web Service API"
        required: false
        type: "boolean"
        x-exportParamName: "IsTriggerable"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfCampaign"
  /rest/v1/campaigns/{campaignId}.json:
    get:
      tags:
      - "Campaigns"
      summary: "Get Campaign By Id"
      description: "Returns the record of a campaign by its id.  Required Permissions:\
        \ Read-Only Campaigns, Read-Write Campaigns"
      operationId: "getCampaignByIdUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "campaignId"
        in: "path"
        description: "campaignId"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "CampaignId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfCampaign"
  /rest/v1/campaigns/{campaignId}/schedule.json:
    post:
      tags:
      - "Campaigns"
      summary: "Schedule Campaign"
      description: "Remotely schedules a batch campaign to run at a given time.  My\
        \ tokens local to the campaign's parent program can be overridden for the\
        \ run to customize content.  When using the \"cloneToProgramName\" parameter\
        \ described below, this endpoint is limited to 20 calls per day. Required\
        \ Permissions: Execute Campaign"
      operationId: "scheduleCampaignUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "campaignId"
        in: "path"
        description: "Id of the batch campaign to schedule."
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "CampaignId"
      - in: "body"
        name: "scheduleCampaignRequest"
        description: "scheduleCampaignRequest"
        required: false
        schema:
          $ref: "#/definitions/ScheduleCampaignRequest"
        x-exportParamName: "ScheduleCampaignRequest"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfCampaign"
  /rest/v1/campaigns/{campaignId}/trigger.json:
    post:
      tags:
      - "Campaigns"
      summary: "Request Campaign"
      description: "Passes a set of leads to a trigger campaign to run through the\
        \ campaign's flow.  The designated campaign must have a Campaign is Requested:\
        \ Web Service API trigger, and must be active.  My tokens local to the campaign's\
        \ parent program can be overridden for the run to customize content. A maximum\
        \ of 100 leads are allowed per call. Required Permissions: Execute Campaign"
      operationId: "triggerCampaignUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "campaignId"
        in: "path"
        description: "The id of the campaign to trigger"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "CampaignId"
      - in: "body"
        name: "triggerCampaignRequest"
        description: "triggerCampaignRequest"
        required: false
        schema:
          $ref: "#/definitions/TriggerCampaignRequest"
        x-exportParamName: "TriggerCampaignRequest"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfCampaign"
  /rest/v1/companies.json:
    get:
      tags:
      - "Companies"
      summary: "Get Companies"
      description: "Retrieves company records from the destination instance based\
        \ on the submitted filter.  Required Permissions: Read-Only Company, Read-Write\
        \ Company"
      operationId: "getCompaniesUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "filterType"
        in: "query"
        description: "The company field to filter on.  Searchable fields can be retrieved\
          \ with the Describe Company call."
        required: true
        type: "string"
        x-exportParamName: "FilterType"
      - name: "filterValues"
        in: "query"
        description: "Comma-separated list of values to match against"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "FilterValues"
      - name: "fields"
        in: "query"
        description: "Comma-separated list of fields to include in the response"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Fields"
      - name: "batchSize"
        in: "query"
        description: "The batch size to return.  The max and default value is 300."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "BatchSize"
      - name: "nextPageToken"
        in: "query"
        description: "A token will be returned by this endpoint if the result set\
          \ is greater than the batch size and can be passed in a subsequent call\
          \ through this parameter.  See Paging Tokens for more info."
        required: false
        type: "string"
        x-exportParamName: "NextPageToken"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfCompany"
    post:
      tags:
      - "Companies"
      summary: "Sync Companies"
      description: "Allows inserting, updating, or upserting of company records into\
        \ Marketo. Required Permissions: Read-Write Company"
      operationId: "syncCompaniesUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "syncCompanyRequest"
        description: "syncCompanyRequest"
        required: true
        schema:
          $ref: "#/definitions/SyncCompanyRequest"
        x-exportParamName: "SyncCompanyRequest"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfCompany"
  /rest/v1/companies/delete.json:
    post:
      tags:
      - "Companies"
      summary: "Delete Companies"
      description: "Deletes the included list of company records from the destination\
        \ instance.  Required Permissions: Read-Write Company"
      operationId: "deleteCompaniesUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "deleteCompanyRequest"
        description: "deleteCompanyRequest"
        required: true
        schema:
          $ref: "#/definitions/DeleteCompanyRequest"
        x-exportParamName: "DeleteCompanyRequest"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfCompany"
  /rest/v1/companies/describe.json:
    get:
      tags:
      - "Companies"
      summary: "Describe Companies"
      description: "Returns metadata about companies and the fields available for\
        \ interaction via the API.  Required Permissions: Read-Only Company, Read-Write\
        \ Company"
      operationId: "describeUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfObjectMetaData"
  /rest/v1/customobjects.json:
    get:
      tags:
      - "Custom Objects"
      summary: "List Custom Objects"
      description: "Returns a list of Custom Object types available in the target\
        \ instance, along with id and deduplication information for each type.  Required\
        \ Permissions: Read-Only Custom Object, Read-Write Custom Object"
      operationId: "listCustomObjectsUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "names"
        in: "query"
        description: "Comma-separated list of names to filter types on"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Names"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfObjectMetaData"
  /rest/v1/customobjects/{customObjectName}.json:
    get:
      tags:
      - "Custom Objects"
      summary: "Get Custom Obects"
      description: "Retrieves a list of custom objects records based on filter and\
        \ set of values.  When action is createOnly, idField may not be used as a\
        \ key and marketoGUID cannot be a member of any object records.  Required\
        \ Permissions: Read-Only Custom Object, Read-Write Custom Object"
      operationId: "getCustomObjectsUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "customObjectName"
        in: "path"
        description: "Name of custom object type to retrieve records for"
        required: true
        type: "string"
        x-exportParamName: "CustomObjectName"
      - in: "body"
        name: "customObjectLookupRequest"
        description: "Optional JSON request for retrieving custom objects with compound\
          \ keys"
        required: false
        schema:
          $ref: "#/definitions/LookupCustomObjectRequest"
        x-exportParamName: "CustomObjectLookupRequest"
      - name: "filterType"
        in: "query"
        description: "Field to filter on. Searchable fields can be retrieved with\
          \ Describe Custom Object"
        required: true
        type: "string"
        x-exportParamName: "FilterType"
      - name: "filterValues"
        in: "query"
        description: "Comma-separated list of field values to match against."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "FilterValues"
      - name: "fields"
        in: "query"
        description: "Comma-separated list of fields to return for each record.  If\
          \ unset marketoGuid, dedupeFields, updatedAt, createdAt will be returned"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Fields"
      - name: "batchSize"
        in: "query"
        description: "The batch size to return.  The max and default value is 300."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "BatchSize"
      - name: "nextPageToken"
        in: "query"
        description: "A token will be returned by this endpoint if the result set\
          \ is greater than the batch size and can be passed in a subsequent call\
          \ through this parameter.  See Paging Tokens for more info."
        required: false
        type: "string"
        x-exportParamName: "NextPageToken"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfCustomObject"
    post:
      tags:
      - "Custom Objects"
      summary: "Sync Custom Objects"
      description: "Inserts, updates, or upserts custom object records to the target\
        \ instance.  Required Permissions: Read-Write Custom Object"
      operationId: "syncCustomObjectsUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "customObjectName"
        in: "path"
        description: "customObjectName"
        required: true
        type: "string"
        x-exportParamName: "CustomObjectName"
      - in: "body"
        name: "syncCustomObjectRequest"
        description: "syncCustomObjectRequest"
        required: true
        schema:
          $ref: "#/definitions/SyncCustomObjectRequest"
        x-exportParamName: "SyncCustomObjectRequest"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfCustomObject"
  /rest/v1/customobjects/{customObjectName}/delete.json:
    post:
      tags:
      - "Custom Objects"
      summary: "Delete Custom Objects"
      description: "Deletes a given set of custom object records.  Required Permissions:\
        \ Read-Write Custom Object"
      operationId: "deleteCustomObjectsUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "customObjectName"
        in: "path"
        description: "customObjectName"
        required: true
        type: "string"
        x-exportParamName: "CustomObjectName"
      - in: "body"
        name: "deleteCustomObjectRequest"
        description: "deleteCustomObjectRequest"
        required: false
        schema:
          $ref: "#/definitions/DeleteCustomObjectRequest"
        x-exportParamName: "DeleteCustomObjectRequest"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfCustomObject"
  /rest/v1/customobjects/{customObjectName}/describe.json:
    get:
      tags:
      - "Custom Objects"
      summary: "Describe Custom Objects"
      description: "Returns metadata regarding a given custom object.  Required Permissions:\
        \ Read-Only Custom Object, Read-Write Custom Object"
      operationId: "describeUsingGET_1"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "customObjectName"
        in: "path"
        description: "customObjectName"
        required: true
        type: "string"
        x-exportParamName: "CustomObjectName"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfObjectMetaData"
  /rest/v1/lead/{leadId}.json:
    get:
      tags:
      - "Leads"
      summary: "Get Lead by Id"
      description: "Retrieves a single lead record through it's Marketo id.  Required\
        \ Permissions: Read-Only Lead, Read-Write Lead"
      operationId: "getLeadByIdUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "leadId"
        in: "path"
        description: "The Marketo lead id"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "LeadId"
      - name: "fields"
        in: "query"
        description: "Comma separated list of field names. If omitted, the following\
          \ default fields will be returned: email, updatedAt, createdAt, lastName,\
          \ firstName, and id."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Fields"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfLead"
  /rest/v1/leads.json:
    get:
      tags:
      - "Leads"
      summary: "Get Leads by Filter Type"
      description: "Returns a list of up to 300 leads based on a list of values in\
        \ a particular field.  Required Permissions: Read-Only Lead, Read-Write Lead"
      operationId: "getLeadsByFilterUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "filterType"
        in: "query"
        description: "The lead field to filter on.  Custom fields (string, email,\
          \ integer), and the following field types are supported: id, cookies, email,\
          \ twitterId, facebookId, linkedInId, sfdcAccountId, sfdcContactId, sfdcLeadId,\
          \ sfdcLeadOwnerId, sfdcOpptyId."
        required: true
        type: "string"
        x-exportParamName: "FilterType"
      - name: "filterValues"
        in: "query"
        description: "A comma-separated list of values to filter on in the specified\
          \ fields."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "FilterValues"
      - name: "fields"
        in: "query"
        description: "A comma-separated list of lead fields to return for each record"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Fields"
      - name: "batchSize"
        in: "query"
        description: "The batch size to return.  The max and default value is 300."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "BatchSize"
      - name: "nextPageToken"
        in: "query"
        description: "A token will be returned by this endpoint if the result set\
          \ is greater than the batch size and can be passed in a subsequent call\
          \ through this parameter.  See Paging Tokens for more info."
        required: false
        type: "string"
        x-exportParamName: "NextPageToken"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfLead"
    post:
      tags:
      - "Leads"
      summary: "Sync Leads"
      description: "Syncs a list of leads to the target instance.  Required Permissions:\
        \ Read-Write Lead"
      operationId: "syncLeadUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "syncLeadRequest"
        description: "syncLeadRequest"
        required: true
        schema:
          $ref: "#/definitions/SyncLeadRequest"
        x-exportParamName: "SyncLeadRequest"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfLead"
  /rest/v1/leads/delete.json:
    post:
      tags:
      - "Leads"
      summary: "Delete Leads"
      description: "Delete a list of leads from the destination instance.  Required\
        \ Permissions: Read-Write Lead"
      operationId: "deleteLeadsUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "deleteLeadRequest"
        description: "deleteLeadRequest"
        required: false
        schema:
          $ref: "#/definitions/DeleteLeadRequest"
        x-exportParamName: "DeleteLeadRequest"
      - name: "id"
        in: "query"
        description: "id"
        required: false
        type: "array"
        items:
          type: "integer"
          format: "int64"
        collectionFormat: "multi"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfLead"
  /rest/v1/leads/describe.json:
    get:
      tags:
      - "Leads"
      summary: "Describe Lead"
      description: "Returns metadata about lead objects in the target instance, including\
        \ a list of all fields available for interaction via the APIs.  Required Permissions:\
        \ Read-Only Lead, Read-Write Lead"
      operationId: "describeUsingGET_2"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfLeadAttribute"
  /rest/v1/leads/partitions.json:
    get:
      tags:
      - "Leads"
      summary: "Get Lead Partitions"
      description: "Returns a list of available partitions in the target instance.\
        \  Required Permissions: Read-Only Lead, Read-Write Lead"
      operationId: "getLeadPartitionsUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfLeadPartition"
    post:
      tags:
      - "Leads"
      summary: "Update Lead Partition"
      description: "Updates the lead partition for a list of leads.  Required Permissions:\
        \ Read-Write Lead"
      operationId: "updatePartitionsUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "updateLeadPartitionRequest"
        description: "updateLeadPartitionRequest"
        required: true
        schema:
          $ref: "#/definitions/UpdateLeadPartitionRequest"
        x-exportParamName: "UpdateLeadPartitionRequest"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfLead"
  /rest/v1/leads/programs/{programId}.json:
    get:
      tags:
      - "Leads"
      summary: "Get Leads by Program Id"
      description: "Retrieves a list of leads which are members of the designated\
        \ program.  Required Permissions: Read-Only Lead, Read-Write Lead"
      operationId: "getLeadsByProgramIdUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "programId"
        in: "path"
        description: "The id of the program to retrieve from"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ProgramId"
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to be returned for each record"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Fields"
      - name: "batchSize"
        in: "query"
        description: "The batch size to return.  The max and default value is 300."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "BatchSize"
      - name: "nextPageToken"
        in: "query"
        description: "A token will be returned by this endpoint if the result set\
          \ is greater than the batch size and can be passed in a subsequent call\
          \ through this parameter.  See Paging Tokens for more info."
        required: false
        type: "string"
        x-exportParamName: "NextPageToken"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfLead"
  /rest/v1/leads/programs/{programId}/status.json:
    post:
      tags:
      - "Leads"
      summary: "Change Lead Program Status"
      description: "Changes the program status of a list of leads in a target program.\
        \  Only existing members of the program may have their status changed with\
        \ this API.  Required Permissions: Read-Write Lead"
      operationId: "changeLeadProgramStatusUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "programId"
        in: "path"
        description: "programId"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ProgramId"
      - in: "body"
        name: "changeLeadProgramStatusRequest"
        description: "changeLeadProgramStatusRequest"
        required: true
        schema:
          $ref: "#/definitions/ChangeLeadProgramStatusRequest"
        x-exportParamName: "ChangeLeadProgramStatusRequest"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfChangeLeadProgramStatusOutputData"
  /rest/v1/leads/push.json:
    post:
      tags:
      - "Leads"
      summary: "Push Lead to Marketo"
      description: "Upserts a lead, and generates a Push Lead to Marketo activity.\
        \  Required Permissions: Read-Write Lead"
      operationId: "pushToMarketoUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "pushLeadToMarketoRequest"
        description: "pushLeadToMarketoRequest"
        required: true
        schema:
          $ref: "#/definitions/PushLeadToMarketoRequest"
        x-exportParamName: "PushLeadToMarketoRequest"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfLead"
  /rest/v1/leads/{leadId}.json:
    get:
      tags:
      - "Leads"
      summary: "Get Lead by Id"
      description: "Retrieves a single lead record through it's Marketo id.  Required\
        \ Permissions: Read-Only Lead, Read-Write Lead"
      operationId: "getLeadByIdUsingGET_1"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "leadId"
        in: "path"
        description: "leadId"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "LeadId"
      - name: "fields"
        in: "query"
        description: "fields"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Fields"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfLead"
  /rest/v1/leads/{leadId}/associate.json:
    post:
      tags:
      - "Leads"
      summary: "Associate Lead"
      description: "Associates a known Marketo lead record to a munchkin cookie and\
        \ its associated web acitvity history.  Required Permissions: Read-Write Lead"
      operationId: "associateLeadUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "leadId"
        in: "path"
        description: "The id of the lead to associate"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "LeadId"
      - name: "cookie"
        in: "query"
        description: "The cookie value to associate"
        required: true
        type: "string"
        x-exportParamName: "Cookie"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseWithoutResult"
  /rest/v1/leads/{leadId}/merge.json:
    post:
      tags:
      - "Leads"
      summary: "Merge Leads"
      description: "Merges two or more known lead records into a single lead record.\
        \  Required Permissions: Read-Write Lead"
      operationId: "mergeLeadsUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "leadId"
        in: "path"
        description: "The id of the winning lead record"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "LeadId"
      - name: "leadId"
        in: "query"
        description: "The id of the losing record"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "LeadId"
      - name: "leadIds"
        in: "query"
        description: "A comma-separated list of ids of losing records"
        required: false
        type: "array"
        items:
          type: "integer"
          format: "int64"
        collectionFormat: "multi"
        x-exportParamName: "LeadIds"
      - name: "mergeInCRM"
        in: "query"
        description: "If set, will attempt to merge the designated records in a natively-synched\
          \ CRM.  Only valid for instances with are natively synched to SFDC."
        required: false
        type: "boolean"
        x-exportParamName: "MergeInCRM"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseWithoutResult"
  /rest/v1/list/{listId}/leads.json:
    get:
      tags:
      - "Static Lists"
      summary: "Get Leads By List Id"
      description: "Retrieves person records which are members of the given static\
        \ list.  Required Permissions: Read-Only Lead, Read-Write Lead"
      operationId: "getLeadsByListIdUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "listId"
        in: "path"
        description: "Id of the static list to retrieve records from"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ListId"
      - name: "fields"
        in: "query"
        description: "Comma-separated list of lead fields to return for each record.\
          \  If unset will return email, updatedAt, createdAt, lastName, firstName\
          \ and id"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Fields"
      - name: "batchSize"
        in: "query"
        description: "The batch size to return.  The max and default value is 300."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "BatchSize"
      - name: "nextPageToken"
        in: "query"
        description: "A token will be returned by this endpoint if the result set\
          \ is greater than the batch size and can be passed in a subsequent call\
          \ through this parameter.  See Paging Tokens for more info."
        required: false
        type: "string"
        x-exportParamName: "NextPageToken"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfLead"
  /rest/v1/lists.json:
    get:
      tags:
      - "Static Lists"
      summary: "Get Lists"
      description: "Returns a set of static list records based on given filter parameters.\
        \ Required Permissions: Read-Only Lead, Read-Write Lead"
      operationId: "getListsUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "query"
        description: "Comma-separated list of static list ids to return"
        required: false
        type: "array"
        items:
          type: "integer"
          format: "int32"
        collectionFormat: "multi"
        x-exportParamName: "Id"
      - name: "name"
        in: "query"
        description: "Comma-separated list of static list names to return"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Name"
      - name: "programName"
        in: "query"
        description: "Comma-separated list of program names.  If set will return all\
          \ static lists that are children of the given programs"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "ProgramName"
      - name: "workspaceName"
        in: "query"
        description: "Comma-separated list of workspace names.  If set will return\
          \ all static lists that are children of the given workspaces"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "WorkspaceName"
      - name: "batchSize"
        in: "query"
        description: "The batch size to return.  The max and default value is 300."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "BatchSize"
      - name: "nextPageToken"
        in: "query"
        description: "A token will be returned by this endpoint if the result set\
          \ is greater than the batch size and can be passed in a subsequent call\
          \ through this parameter.  See Paging Tokens for more info."
        required: false
        type: "string"
        x-exportParamName: "NextPageToken"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfStaticList"
  /rest/v1/lists/{listId}.json:
    get:
      tags:
      - "Static Lists"
      summary: "Get List by Id"
      description: "Returns a list record by its id.  Required Permissions: Read-Only\
        \ Lead, Read-Write Lead"
      operationId: "getListByIdUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "listId"
        in: "path"
        description: "Id of the static list to retrieve records from"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ListId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfStaticList"
  /rest/v1/lists/{listId}/leads.json:
    get:
      tags:
      - "Static Lists"
      summary: "Get Leads By List Id"
      description: "Retrieves person records which are members of the given static\
        \ list.  Required Permissions: Read-Only Lead, Read-Write Lead"
      operationId: "getLeadsByListIdUsingGET_1"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "listId"
        in: "path"
        description: "Id of the static list to retrieve records from"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ListId"
      - name: "fields"
        in: "query"
        description: "Comma-separated list of lead fields to return for each record.\
          \  If unset will return email, updatedAt, createdAt, lastName, firstName\
          \ and id"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Fields"
      - name: "batchSize"
        in: "query"
        description: "The batch size to return.  The max and default value is 300."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "BatchSize"
      - name: "nextPageToken"
        in: "query"
        description: "A token will be returned by this endpoint if the result set\
          \ is greater than the batch size and can be passed in a subsequent call\
          \ through this parameter.  See Paging Tokens for more info."
        required: false
        type: "string"
        x-exportParamName: "NextPageToken"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfLead"
    post:
      tags:
      - "Static Lists"
      summary: "Add to List"
      description: "Adds a given set of person records to a target static list.  There\
        \ is a limit of 300 lead ids per request.  Required Permissions: Read-Write\
        \ Lead"
      operationId: "addLeadsToListUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "listId"
        in: "path"
        description: "Id of target list"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ListId"
      - in: "body"
        name: "listOperationRequest"
        description: "Optional JSON request body for submitting leads"
        required: false
        schema:
          $ref: "#/definitions/ListOperationRequest"
        x-exportParamName: "ListOperationRequest"
      - name: "id"
        in: "query"
        description: "Comma-separated list of lead ids to add to the list"
        required: false
        type: "array"
        items:
          type: "integer"
          format: "int32"
        collectionFormat: "multi"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfListOperationOutputData"
    delete:
      tags:
      - "Static Lists"
      summary: "Remove from List"
      description: "Removes a given set of person records from a target static list.\
        \  Required Permissions: Read-Write Lead"
      operationId: "removeLeadsFromListUsingDELETE"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "listId"
        in: "path"
        description: "Id of static list to remove leads from"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ListId"
      - in: "body"
        name: "listOperationRequest"
        description: "listOperationRequest"
        required: true
        schema:
          $ref: "#/definitions/ListOperationRequest"
        x-exportParamName: "ListOperationRequest"
      - name: "id"
        in: "query"
        description: "id"
        required: true
        type: "array"
        items:
          type: "integer"
          format: "int32"
        collectionFormat: "multi"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfListOperationOutputData"
  /rest/v1/lists/{listId}/leads/ismember.json:
    get:
      tags:
      - "Static Lists"
      summary: "Member of List"
      description: "Checks if leads are members of a given static list.  Required\
        \ Permissions: Read-Write Lead"
      operationId: "areLeadsMemberOfListUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "listId"
        in: "path"
        description: "Id of the static list to check against"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ListId"
      - in: "body"
        name: "listOperationRequest"
        description: "Optional JSON request body"
        required: false
        schema:
          $ref: "#/definitions/ListOperationRequest"
        x-exportParamName: "ListOperationRequest"
      - name: "id"
        in: "query"
        description: "Comma-separated list of lead ids to check"
        required: false
        type: "array"
        items:
          type: "integer"
          format: "int32"
        collectionFormat: "multi"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfListOperationOutputData"
  /rest/v1/namedAccountList/{id}/namedAccounts.json:
    get:
      tags:
      - "Named Account Lists"
      summary: "Get Named Account List Members"
      description: "Retrieves the named accounts which are members of the given list.\
        \  Required Permissions: Read-Only Named Account, Read-Write Named Account"
      operationId: "getNamedAccountListMembersUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Id of the named account list"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "fields"
        in: "query"
        description: "Comma-separated list of fields to include in the response"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Fields"
      - name: "batchSize"
        in: "query"
        description: "The batch size to return.  The max and default value is 300."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "BatchSize"
      - name: "nextPageToken"
        in: "query"
        description: "A token will be returned by this endpoint if the result set\
          \ is greater than the batch size and can be passed in a subsequent call\
          \ through this parameter.  See Paging Tokens for more info."
        required: false
        type: "string"
        x-exportParamName: "NextPageToken"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfNamedAccount"
    post:
      tags:
      - "Named Account Lists"
      summary: "Add Named Account List Members"
      description: "Adds named account records to a named account list.  Required\
        \ Permissions: Read-Write Named Account"
      operationId: "addNamedAccountListMembersUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Id of target named account list"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "addNamedAccountListMemberRequest"
        description: "addNamedAccountListMemberRequest"
        required: true
        schema:
          $ref: "#/definitions/AddNamedAccountListMemberRequest"
        x-exportParamName: "AddNamedAccountListMemberRequest"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfNamedAccount"
  /rest/v1/namedAccountList/{id}/namedAccounts/remove.json:
    post:
      tags:
      - "Named Account Lists"
      summary: "Remove Named Account List Members"
      description: "Removes named account members from a named account list.  Required\
        \ Permissions: Read-Write Named Account"
      operationId: "removeNamedAccountListMembersUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Id of target named account list"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "removeNamedAccountListMemberRequest"
        description: "removeNamedAccountListMemberRequest"
        required: true
        schema:
          $ref: "#/definitions/RemoveNamedAccountListMemberRequest"
        x-exportParamName: "RemoveNamedAccountListMemberRequest"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfNamedAccount"
  /rest/v1/namedAccountLists.json:
    get:
      tags:
      - "Named Account Lists"
      summary: "Get Named Account Lists"
      description: "Retrieves a list of named account list records based on the filter\
        \ type and values given.  Required Permissions: Read-Only Named Account List,\
        \ Read-Write Named Account List"
      operationId: "getNamedAccountListsUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "filterType"
        in: "query"
        description: "The named account list field to filter on (\"dedupeFields\"\
          \ or \"idFields\")."
        required: true
        type: "string"
        x-exportParamName: "FilterType"
      - name: "filterValues"
        in: "query"
        description: "Comma-separated list of values to match against"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "FilterValues"
      - name: "batchSize"
        in: "query"
        description: "The batch size to return.  The max and default value is 300."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "BatchSize"
      - name: "nextPageToken"
        in: "query"
        description: "A token will be returned by this endpoint if the result set\
          \ is greater than the batch size and can be passed in a subsequent call\
          \ through this parameter.  See Paging Tokens for more info."
        required: false
        type: "string"
        x-exportParamName: "NextPageToken"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfNamedAccountList"
    post:
      tags:
      - "Named Account Lists"
      summary: "Sync Named Account Lists"
      description: "Creates and/or updates named account list records.  Required Permissions:\
        \ Read-Write Named Account List"
      operationId: "syncNamedAccountListsUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "syncNamedAccountListRequest"
        description: "syncNamedAccountListRequest"
        required: true
        schema:
          $ref: "#/definitions/SyncNamedAccountListRequest"
        x-exportParamName: "SyncNamedAccountListRequest"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfNamedAccountList"
  /rest/v1/namedAccountLists/delete.json:
    post:
      tags:
      - "Named Account Lists"
      summary: "Delete Named Account Lists"
      description: "Delete named account lists by dedupe fields, or by id field. \
        \ Required Permissions: Read-Write Named Account List"
      operationId: "deleteNamedAccountListsUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "deleteNamedAccountListRequest"
        description: "deleteNamedAccountListRequest"
        required: true
        schema:
          $ref: "#/definitions/DeleteNamedAccountListRequest"
        x-exportParamName: "DeleteNamedAccountListRequest"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfNamedAccountList"
  /rest/v1/namedaccounts.json:
    get:
      tags:
      - "Named Accounts"
      summary: "Get NamedAccounts"
      description: "Retrieves namedaccount records from the destination instance based\
        \ on the submitted filter.  Required Permissions: Read-Only Named Account,\
        \ Read-Write Named Account"
      operationId: "getNamedAccountsUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "filterType"
        in: "query"
        description: "NamedAccounts field to filter on"
        required: true
        type: "string"
        x-exportParamName: "FilterType"
      - name: "filterValues"
        in: "query"
        description: "The namedaccount field to filter on.  Searchable fields can\
          \ be retrieved with the Describe SalesPerson call."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "FilterValues"
      - name: "fields"
        in: "query"
        description: "Comma-separated list of fields to include in the response"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Fields"
      - name: "batchSize"
        in: "query"
        description: "The batch size to return.  The max and default value is 300."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "BatchSize"
      - name: "nextPageToken"
        in: "query"
        description: "A token will be returned by this endpoint if the result set\
          \ is greater than the batch size and can be passed in a subsequent call\
          \ through this parameter.  See Paging Tokens for more info."
        required: false
        type: "string"
        x-exportParamName: "NextPageToken"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfNamedAccount"
    post:
      tags:
      - "Named Accounts"
      summary: "Sync NamedAccounts"
      description: "Allows inserts, updates, or upserts of namedaccounts to the target\
        \ instance.  Required Permissions: Read-Write Named Account"
      operationId: "syncNamedAccountsUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "syncAccountRequest"
        description: "syncAccountRequest"
        required: true
        schema:
          $ref: "#/definitions/SyncNamedAccountRequest"
        x-exportParamName: "SyncAccountRequest"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfNamedAccount"
  /rest/v1/namedaccounts/delete.json:
    post:
      tags:
      - "Named Accounts"
      summary: "Delete NamedAccounts"
      description: "Deletes a list of namedaccount records from the target instance.\
        \  Input records should have only one member, based on the value of 'dedupeBy'.\
        \  Required Permissions: Read-Write Named Account"
      operationId: "deleteNamedAccountsUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "deleteAccountRequest"
        description: "deleteAccountRequest"
        required: true
        schema:
          $ref: "#/definitions/DeleteNamedAccountRequest"
        x-exportParamName: "DeleteAccountRequest"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfNamedAccount"
  /rest/v1/namedaccounts/describe.json:
    get:
      tags:
      - "Named Accounts"
      summary: "Describe NamedAccounts"
      description: "Returns metadata about namedaccounts and the fields available\
        \ for interaction via the API.  Required Permissions: Read-Only Named Account,\
        \ Read-Write Named Account"
      operationId: "describeUsingGET_3"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfObjectMetaData"
  /rest/v1/opportunities.json:
    get:
      tags:
      - "Opportunities"
      summary: "Get Opportunities"
      description: "Returns a list of opportunities based on a filter and set of values.\
        \  Required Permissions: Read-Only Opportunity, Read-Write Named Opportunity"
      operationId: "getOpportunitiesUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "customObjectLookupRequest"
        description: "customObjectLookupRequest"
        required: false
        schema:
          $ref: "#/definitions/LookupCustomObjectRequest"
        x-exportParamName: "CustomObjectLookupRequest"
      - name: "filterType"
        in: "query"
        description: "Opportunities field to filter on"
        required: true
        type: "string"
        x-exportParamName: "FilterType"
      - name: "filterValues"
        in: "query"
        description: "Comma-separated list of values to match against"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "FilterValues"
      - name: "fields"
        in: "query"
        description: "Comma-separated list of fields to include in the response"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Fields"
      - name: "batchSize"
        in: "query"
        description: "Maximum number of records to return in the response.  Max and\
          \ default is 300"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "BatchSize"
      - name: "nextPageToken"
        in: "query"
        description: "Paging token returned from a previous response"
        required: false
        type: "string"
        x-exportParamName: "NextPageToken"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfCustomObject"
    post:
      tags:
      - "Opportunities"
      summary: "Sync Opportunities"
      description: "Allows inserting, updating, or upserting of opportunity records\
        \ into the target instance.  Required Permissions: Read-Write Named Opportunity"
      operationId: "syncOpportunitiesUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "syncCustomObjectRequest"
        description: "syncCustomObjectRequest"
        required: true
        schema:
          $ref: "#/definitions/SyncCustomObjectRequest"
        x-exportParamName: "SyncCustomObjectRequest"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfCustomObject"
  /rest/v1/opportunities/delete.json:
    post:
      tags:
      - "Opportunities"
      summary: "Delete Opportunities"
      description: "Deletes a list of opportunity records from the target instance.\
        \  Input records should only have one member, based on the value of 'dedupeBy'.\
        \  Required Permissions: Read-Write Named Opportunity"
      operationId: "deleteOpportunitiesUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "deleteCustomObjectRequest"
        description: "deleteCustomObjectRequest"
        required: false
        schema:
          $ref: "#/definitions/DeleteCustomObjectRequest"
        x-exportParamName: "DeleteCustomObjectRequest"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfCustomObject"
  /rest/v1/opportunities/describe.json:
    get:
      tags:
      - "Opportunities"
      summary: "Describe Opportunity"
      description: "Returns object and field metadata for Opportunity type records\
        \ in the target instance.  Required Permissions: Read-Only Opportunity, Read-Write\
        \ Named Opportunity"
      operationId: "describeUsingGET_4"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfObjectMetaData"
  /rest/v1/opportunities/roles.json:
    get:
      tags:
      - "Opportunities"
      summary: "Get Opportunity Roles"
      description: "Returns a list of opportunity roles based on a filter and set\
        \ of values.  Required Permissions: Read-Only Opportunity, Read-Write Named\
        \ Opportunity"
      operationId: "getOpportunityRolesUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "customObjectLookupRequest"
        description: "Optional JSON request for retrieving opportunity roles with\
          \ compound keys"
        required: false
        schema:
          $ref: "#/definitions/LookupCustomObjectRequest"
        x-exportParamName: "CustomObjectLookupRequest"
      - name: "filterType"
        in: "query"
        description: "The role field to filter on.  Searchable fields can be retrieved\
          \ with the Describe Opportunity call."
        required: true
        type: "string"
        x-exportParamName: "FilterType"
      - name: "filterValues"
        in: "query"
        description: "Comma-separated list of field values to return records for"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "FilterValues"
      - name: "fields"
        in: "query"
        description: "Comma-separated list of fields to include in the response"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Fields"
      - name: "batchSize"
        in: "query"
        description: "Maximum number of records to return in the response.  Max and\
          \ default is 300"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "BatchSize"
      - name: "nextPageToken"
        in: "query"
        description: "Paging token returned from a previous response"
        required: false
        type: "string"
        x-exportParamName: "NextPageToken"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfCustomObject"
    post:
      tags:
      - "Opportunities"
      summary: "Sync Opportunity Roles"
      description: "Allows inserts, updates and upserts of Opportunity Role records\
        \ in the target instance.  Required Permissions: Read-Write Named Opportunity"
      operationId: "syncOpportunityRolesUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "syncCustomObjectRequest"
        description: "syncCustomObjectRequest"
        required: true
        schema:
          $ref: "#/definitions/SyncCustomObjectRequest"
        x-exportParamName: "SyncCustomObjectRequest"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfCustomObject"
  /rest/v1/opportunities/roles/delete.json:
    post:
      tags:
      - "Opportunities"
      summary: "Delete Opportunity Roles"
      description: "Deletes a list of opportunities from the target instance.  Required\
        \ Permissions: Read-Write Named Opportunity"
      operationId: "deleteOpportunityRolesUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "deleteCustomObjectRequest"
        description: "deleteCustomObjectRequest"
        required: false
        schema:
          $ref: "#/definitions/DeleteCustomObjectRequest"
        x-exportParamName: "DeleteCustomObjectRequest"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfCustomObject"
  /rest/v1/opportunities/roles/describe.json:
    get:
      tags:
      - "Opportunities"
      summary: "Describe Opportunity Role"
      description: "Returns object and field metadata for Opportunity Roles in the\
        \ target instance.  Required Permissions: Read-Only Opportunity, Read-Write\
        \ Named Opportunity"
      operationId: "describeOpportunityRoleUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfObjectMetaData"
  /rest/v1/salespersons.json:
    get:
      tags:
      - "Sales Persons"
      summary: "Get SalesPersons"
      description: "Retrieves salesperson records from the destination instance based\
        \ on the submitted filter.  Required Permissions: Read-Only Sales Person,\
        \ Read-Write Sales Person"
      operationId: "getSalesPersonUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "filterType"
        in: "query"
        description: "The sales person field to filter on. Searchable fields can be\
          \ retrieved with the Describe Sales Person call."
        required: true
        type: "string"
        x-exportParamName: "FilterType"
      - name: "filterValues"
        in: "query"
        description: "Comma seperated list of search values."
        required: true
        type: "array"
        items:
          type: "string"
        x-exportParamName: "FilterValues"
      - name: "fields"
        in: "query"
        description: "Comma-separated list of fields to include in the response"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Fields"
      - name: "batchSize"
        in: "query"
        description: "The batch size to return.  The max and default value is 300."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "BatchSize"
      - name: "nextPageToken"
        in: "query"
        description: "A token will be returned by this endpoint if the result set\
          \ is greater than the batch size and can be passed in a subsequent call\
          \ through this parameter.  See Paging Tokens for more info."
        required: false
        type: "string"
        x-exportParamName: "NextPageToken"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfSalesPerson"
    post:
      tags:
      - "Sales Persons"
      summary: "Sync SalesPersons"
      description: "Allows inserts, updates, or upserts of salespersons to the target\
        \ instance.  Required Permissions: Read-Write Sales Person"
      operationId: "syncSalesPersonsUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "syncSalesPersonRequest"
        description: "syncSalesPersonRequest"
        required: true
        schema:
          $ref: "#/definitions/SyncSalesPersonRequest"
        x-exportParamName: "SyncSalesPersonRequest"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfSalesPerson"
  /rest/v1/salespersons/delete.json:
    post:
      tags:
      - "Sales Persons"
      summary: "Delete SalesPersons"
      description: "Deletes a list of salesperson records from the target instance.\
        \  Input records should have only one member, based on the value of 'dedupeBy'.\
        \  Required Permissions: Read-Write Sales Person"
      operationId: "deleteSalesPersonUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "deleteSalesPersonRequest"
        description: "deleteSalesPersonRequest"
        required: true
        schema:
          $ref: "#/definitions/DeleteSalesPersonRequest"
        x-exportParamName: "DeleteSalesPersonRequest"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfSalesPerson"
  /rest/v1/salespersons/describe.json:
    get:
      tags:
      - "Sales Persons"
      summary: "Describe SalesPersons"
      description: "Returns metadata about salespersons and the fields available for\
        \ interaction via the API.  Required Permissions: Read-Only Sales Person,\
        \ Read-Write Sales Person"
      operationId: "describeUsingGET_5"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfObjectMetaData"
  /rest/v1/stats/errors.json:
    get:
      tags:
      - "Usage"
      summary: "Get Daily Errors"
      description: "Retrieves a list of API users and a count of each error type they\
        \ have encountered in the current day.  Required Permissions: None"
      operationId: "getDailyErrorsUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfUsageData"
  /rest/v1/stats/errors/last7days.json:
    get:
      tags:
      - "Usage"
      summary: "Get Weekly Errors"
      description: "Returns a list of API users and a count of each error type they\
        \ have encountered in the past 7 days.  Required Permissions: None"
      operationId: "getLast7DaysErrorsUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfUsageData"
  /rest/v1/stats/usage.json:
    get:
      tags:
      - "Usage"
      summary: "Get Daily Usage"
      description: "Returns a list of API users and the number of calls they have\
        \ consumed for the day.  Required Permissions: None"
      operationId: "getDailyUsageUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfUsageData"
  /rest/v1/stats/usage/last7days.json:
    get:
      tags:
      - "Usage"
      summary: "Get Weekly Usage"
      description: "Returns a list of API users and the number of calls they have\
        \ consumed in the past 7 days.  Required Permissions: None"
      operationId: "getLast7DaysUsageUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseOfUsageData"
definitions:
  ResponseOfActivity:
    type: "object"
    required:
    - "errors"
    - "requestId"
    - "result"
    - "success"
    - "warnings"
    properties:
      errors:
        type: "array"
        description: "Array of errors that occurred if the request was unsuccessful"
        items:
          $ref: "#/definitions/Error"
      moreResult:
        type: "boolean"
        example: false
        description: "Boolean indicating if there are more results in subsequent pages"
      nextPageToken:
        type: "string"
        description: "Paging token given if the result set exceeded the allowed batch\
          \ size"
      requestId:
        type: "string"
        description: "Id of the request made"
      result:
        type: "array"
        description: "Array of results for individual records in the operation, may\
          \ be empty"
        items:
          $ref: "#/definitions/Activity"
      success:
        type: "boolean"
        example: false
        description: "Whether the request succeeded"
      warnings:
        type: "array"
        description: "Array of warnings given for the operation"
        items:
          $ref: "#/definitions/Warning"
    example:
      result:
      - activityDate: "2000-01-23T04:56:07.000+00:00"
        campaignId: 6
        attributes:
        - apiName: "apiName"
          name: "name"
          value: "{}"
        - apiName: "apiName"
          name: "name"
          value: "{}"
        id: 1
        marketoGUID: "marketoGUID"
        primaryAttributeValue: "primaryAttributeValue"
        primaryAttributeValueId: 5
        activityTypeId: 0
        leadId: 5
      - activityDate: "2000-01-23T04:56:07.000+00:00"
        campaignId: 6
        attributes:
        - apiName: "apiName"
          name: "name"
          value: "{}"
        - apiName: "apiName"
          name: "name"
          value: "{}"
        id: 1
        marketoGUID: "marketoGUID"
        primaryAttributeValue: "primaryAttributeValue"
        primaryAttributeValueId: 5
        activityTypeId: 0
        leadId: 5
      nextPageToken: "nextPageToken"
      requestId: "requestId"
      success: false
      warnings:
      - code: 5
        message: "message"
      - code: 5
        message: "message"
      moreResult: false
      errors:
      - code: 0
        message: "message"
      - code: 0
        message: "message"
  LeadInputData:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        format: "int64"
        description: "Unique integer id of a lead record"
    description: "Lead record containing only lead id"
    example:
      id: 0
  ResponseOfStaticList:
    type: "object"
    required:
    - "errors"
    - "requestId"
    - "result"
    - "success"
    - "warnings"
    properties:
      errors:
        type: "array"
        description: "Array of errors that occurred if the request was unsuccessful"
        items:
          $ref: "#/definitions/Error"
      nextPageToken:
        type: "string"
        description: "Paging token given if the result set exceeded the allowed batch\
          \ size"
      requestId:
        type: "string"
        description: "Id of the request made"
      result:
        type: "array"
        description: "Array of results for individual records in the operation, may\
          \ be empty"
        items:
          $ref: "#/definitions/StaticList"
      success:
        type: "boolean"
        example: false
        description: "Whether the request succeeded"
      warnings:
        type: "array"
        description: "Array of warnings given for the operation"
        items:
          $ref: "#/definitions/Warning"
    example:
      result:
      - createdAt: "createdAt"
        programName: "programName"
        name: "name"
        description: "description"
        workspaceName: "workspaceName"
        id: 0
        updatedAt: "updatedAt"
      - createdAt: "createdAt"
        programName: "programName"
        name: "name"
        description: "description"
        workspaceName: "workspaceName"
        id: 0
        updatedAt: "updatedAt"
      nextPageToken: "nextPageToken"
      requestId: "requestId"
      success: false
      warnings:
      - code: 5
        message: "message"
      - code: 5
        message: "message"
      errors:
      - code: 0
        message: "message"
      - code: 0
        message: "message"
  ResponseOfCustomActivityType:
    type: "object"
    required:
    - "errors"
    - "requestId"
    - "result"
    - "success"
    - "warnings"
    properties:
      errors:
        type: "array"
        description: "Array of errors that occurred if the request was unsuccessful"
        items:
          $ref: "#/definitions/Error"
      moreResult:
        type: "boolean"
        example: false
        description: "Boolean indicating if there are more results in subsequent pages"
      nextPageToken:
        type: "string"
        description: "Paging token given if the result set exceeded the allowed batch\
          \ size"
      requestId:
        type: "string"
        description: "Id of the request made"
      result:
        type: "array"
        description: "Array of results for individual records in the operation, may\
          \ be empty"
        items:
          $ref: "#/definitions/CustomActivityType"
      success:
        type: "boolean"
        example: false
        description: "Whether the request succeeded"
      warnings:
        type: "array"
        description: "Array of warnings given for the operation"
        items:
          $ref: "#/definitions/Warning"
    example:
      result:
      - createdAt: "createdAt"
        apiName: "apiName"
        primaryAttribute:
          apiName: "apiName"
          isPrimary: false
          dataType: "string"
          name: "name"
          description: "description"
        triggerName: "triggerName"
        filterName: "filterName"
        name: "name"
        description: "description"
        attributes:
        - apiName: "apiName"
          isPrimary: false
          dataType: "string"
          name: "name"
          description: "description"
        - apiName: "apiName"
          isPrimary: false
          dataType: "string"
          name: "name"
          description: "description"
        id: 0
        status: "draft"
        updatedAt: "updatedAt"
      - createdAt: "createdAt"
        apiName: "apiName"
        primaryAttribute:
          apiName: "apiName"
          isPrimary: false
          dataType: "string"
          name: "name"
          description: "description"
        triggerName: "triggerName"
        filterName: "filterName"
        name: "name"
        description: "description"
        attributes:
        - apiName: "apiName"
          isPrimary: false
          dataType: "string"
          name: "name"
          description: "description"
        - apiName: "apiName"
          isPrimary: false
          dataType: "string"
          name: "name"
          description: "description"
        id: 0
        status: "draft"
        updatedAt: "updatedAt"
      nextPageToken: "nextPageToken"
      requestId: "requestId"
      success: false
      warnings:
      - code: 5
        message: "message"
      - code: 5
        message: "message"
      moreResult: false
      errors:
      - code: 0
        message: "message"
      - code: 0
        message: "message"
  LeadChange:
    type: "object"
    required:
    - "activityDate"
    - "activityTypeId"
    - "attributes"
    - "id"
    - "leadId"
    properties:
      activityDate:
        type: "string"
        format: "date-time"
        description: "Datetime of the activity"
      activityTypeId:
        type: "integer"
        format: "int32"
        description: "Id of the activity type"
      attributes:
        type: "array"
        description: "List of secondary attributes"
        items:
          $ref: "#/definitions/Attribute"
      campaignId:
        type: "integer"
        format: "int64"
      fields:
        type: "array"
        items:
          $ref: "#/definitions/LeadChangeField"
      id:
        type: "integer"
        format: "int64"
        description: "Integer id of the activity.  For instances which have been migrated\
          \ to Activity Service, this field may not be present, and should not be\
          \ treated as unique."
      leadId:
        type: "integer"
        format: "int64"
        description: "Id of the lead associated to the activity"
      marketoGUID:
        type: "string"
        description: "Unique id of the activity (128 character string)"
    example:
      activityDate: "2000-01-23T04:56:07.000+00:00"
      campaignId: 6
      attributes:
      - apiName: "apiName"
        name: "name"
        value: "{}"
      - apiName: "apiName"
        name: "name"
        value: "{}"
      id: 5
      fields:
      - newValue: "newValue"
        name: "name"
        id: 1
        oldValue: "oldValue"
      - newValue: "newValue"
        name: "name"
        id: 1
        oldValue: "oldValue"
      marketoGUID: "marketoGUID"
      activityTypeId: 0
      leadId: 5
  LeadPartition:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      description:
        type: "string"
        description: "Description of the partition"
      id:
        type: "integer"
        format: "int32"
        description: "Unique integer id of the partition"
      name:
        type: "string"
        description: "Name of the partition"
    example:
      name: "name"
      description: "description"
      id: 0
  ActivityType:
    type: "object"
    required:
    - "attributes"
    - "id"
    - "name"
    - "primaryAttribute"
    properties:
      apiName:
        type: "string"
      attributes:
        type: "array"
        description: "List of secondary attributes of the type"
        items:
          $ref: "#/definitions/ActivityTypeAttribute"
      description:
        type: "string"
        description: "Description of the activity type"
      id:
        type: "integer"
        format: "int32"
        description: "Id of the activity type"
      name:
        type: "string"
        description: "Name of the activity type"
      primaryAttribute:
        description: "Primary attribute of the type"
        $ref: "#/definitions/ActivityTypeAttribute"
    example:
      apiName: "apiName"
      primaryAttribute:
        apiName: "apiName"
        dataType: "dataType"
        name: "name"
      name: "name"
      description: "description"
      attributes:
      - apiName: "apiName"
        dataType: "dataType"
        name: "name"
      - apiName: "apiName"
        dataType: "dataType"
        name: "name"
      id: 0
  ActivityTypeAttribute:
    type: "object"
    required:
    - "dataType"
    - "name"
    properties:
      apiName:
        type: "string"
      dataType:
        type: "string"
        description: "Datatype of the Attribute"
      name:
        type: "string"
        description: "Name of the attribute"
    example:
      apiName: "apiName"
      dataType: "dataType"
      name: "name"
  ResponseWithoutResult:
    type: "object"
    required:
    - "requestId"
    - "success"
    properties:
      errors:
        type: "array"
        description: "Array of errors that occurred if the request was unsuccessful"
        items:
          $ref: "#/definitions/Error"
      nextPageToken:
        type: "string"
        description: "Paging token returned from a previous response"
      requestId:
        type: "string"
        description: "Id of the request made"
      success:
        type: "boolean"
        example: false
        description: "Whether the request succeeded"
      warnings:
        type: "array"
        description: "Array of warnings given for the operation"
        items:
          $ref: "#/definitions/Warning"
    example:
      nextPageToken: "nextPageToken"
      requestId: "requestId"
      success: false
      warnings:
      - code: 5
        message: "message"
      - code: 5
        message: "message"
      errors:
      - code: 0
        message: "message"
      - code: 0
        message: "message"
  SyncCustomObjectRequest:
    type: "object"
    required:
    - "input"
    properties:
      action:
        type: "string"
        description: "Type of sync operation to perform"
        enum:
        - "createOnly"
        - "updateOnly"
        - "createOrUpdate"
      dedupeBy:
        type: "string"
        description: "Field to deduplicate on.  If the value in the field for a given\
          \ record is not unique, an error will be returned for the individual record."
      input:
        type: "array"
        description: "List of input records"
        items:
          $ref: "#/definitions/CustomObject"
    example:
      input:
      - reasons:
        - code: "code"
          message: "message"
        - code: "code"
          message: "message"
        marketoGUID: "marketoGUID"
        seq: 0
      - reasons:
        - code: "code"
          message: "message"
        - code: "code"
          message: "message"
        marketoGUID: "marketoGUID"
        seq: 0
      action: "createOnly"
      dedupeBy: "dedupeBy"
  InputStream:
    type: "object"
  TriggerCampaignRequest:
    type: "object"
    required:
    - "input"
    properties:
      input:
        description: "Object describing trigger configuration for the campaign"
        $ref: "#/definitions/TriggerCampaignData"
    example:
      input:
        leads:
        - id: 0
        - id: 0
        tokens:
        - name: "name"
          value: "value"
        - name: "name"
          value: "value"
  ResponseOfNamedAccount:
    type: "object"
    required:
    - "errors"
    - "requestId"
    - "result"
    - "success"
    - "warnings"
    properties:
      errors:
        type: "array"
        description: "Array of errors that occurred if the request was unsuccessful"
        items:
          $ref: "#/definitions/Error"
      moreResult:
        type: "boolean"
        example: false
        description: "Boolean indicating if there are more results in subsequent pages"
      nextPageToken:
        type: "string"
        description: "Paging token given if the result set exceeded the allowed batch\
          \ size"
      requestId:
        type: "string"
        description: "Id of the request made"
      result:
        type: "array"
        description: "Array of results for individual records in the operation, may\
          \ be empty"
        items:
          $ref: "#/definitions/NamedAccount"
      success:
        type: "boolean"
        example: false
        description: "Whether the request succeeded"
      warnings:
        type: "array"
        description: "Array of warnings given for the operation"
        items:
          $ref: "#/definitions/Warning"
    example:
      result:
      - reasons:
        - code: "code"
          message: "message"
        - code: "code"
          message: "message"
        marketoGUID: "marketoGUID"
        seq: 0
        status: "created"
      - reasons:
        - code: "code"
          message: "message"
        - code: "code"
          message: "message"
        marketoGUID: "marketoGUID"
        seq: 0
        status: "created"
      nextPageToken: "nextPageToken"
      requestId: "requestId"
      success: false
      warnings:
      - code: 5
        message: "message"
      - code: 5
        message: "message"
      moreResult: false
      errors:
      - code: 0
        message: "message"
      - code: 0
        message: "message"
  Lead:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        format: "int32"
        description: "Unique integer id of a lead record"
      membership:
        description: "Membership data for the parent program.  Only returned via Get\
          \ Leads By Program Id"
        $ref: "#/definitions/ProgramMembership"
      reason:
        description: "Reason object describing why an operation did not succeed for\
          \ a record"
        $ref: "#/definitions/Reason"
      status:
        type: "string"
        description: "Status of the operation performed on the record"
    description: "Lead record.  Always contains id, but may have any number of other\
      \ fields, depending on the fields available in the target instance."
    example:
      reason:
        code: "code"
        message: "message"
      id: 0
      membership:
        isExhausted: false
        stream: "stream"
        nurtureCadence: "nurtureCadence"
        acquiredBy: false
        membershipDate: "membershipDate"
        reachedSuccess: false
        progressionStatus: "progressionStatus"
      status: "status"
  SyncLeadRequest:
    type: "object"
    required:
    - "input"
    properties:
      action:
        type: "string"
        description: "Type of sync operation to perform.  Defaults to createOrUpdate\
          \ if unset"
        enum:
        - "createOnly"
        - "updateOnly"
        - "createOrUpdate"
        - "createDuplicate"
      asyncProcessing:
        type: "boolean"
        example: false
        description: "If set to true, the call will return immediately"
      input:
        type: "array"
        description: "List of leads for input"
        items:
          $ref: "#/definitions/Lead"
      lookupField:
        type: "string"
        description: "Field to deduplicate on.  The field must be present in each\
          \ lead record of the input.  Defaults to email if unset"
      partitionCode:
        type: "string"
      partitionName:
        type: "string"
        description: "Name of the partition to operate on, if applicable.  Should\
          \ be set whenver possible, when interacting with an instance where partitions\
          \ are enabled."
    example:
      lookupField: "lookupField"
      input:
      - reason:
          code: "code"
          message: "message"
        id: 0
        membership:
          isExhausted: false
          stream: "stream"
          nurtureCadence: "nurtureCadence"
          acquiredBy: false
          membershipDate: "membershipDate"
          reachedSuccess: false
          progressionStatus: "progressionStatus"
        status: "status"
      - reason:
          code: "code"
          message: "message"
        id: 0
        membership:
          isExhausted: false
          stream: "stream"
          nurtureCadence: "nurtureCadence"
          acquiredBy: false
          membershipDate: "membershipDate"
          reachedSuccess: false
          progressionStatus: "progressionStatus"
        status: "status"
      partitionName: "partitionName"
      partitionCode: "partitionCode"
      action: "createOnly"
      asyncProcessing: false
  DeleteSalesPersonRequest:
    type: "object"
    required:
    - "input"
    properties:
      deleteBy:
        type: "string"
        description: "Key to use for deletion of the record"
      input:
        type: "array"
        description: "List of input records"
        items:
          $ref: "#/definitions/SalesPerson"
    example:
      input:
      - reasons:
        - code: "code"
          message: "message"
        - code: "code"
          message: "message"
        id: 0
        seq: 6
        status: "created"
      - reasons:
        - code: "code"
          message: "message"
        - code: "code"
          message: "message"
        id: 0
        seq: 6
        status: "created"
      deleteBy: "deleteBy"
  ListOperationOutputData:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        format: "int64"
        description: "Unique integer id of a lead record"
      reasons:
        type: "array"
        description: "List of reasons why an operation did not succeed.  Reasons are\
          \ only present in API responses and should not be submitted"
        items:
          $ref: "#/definitions/Reason"
      status:
        type: "string"
        description: "Status of the operation performed on the record"
    example:
      reasons:
      - code: "code"
        message: "message"
      - code: "code"
        message: "message"
      id: 0
      status: "status"
  LeadAttribute:
    type: "object"
    required:
    - "dataType"
    - "displayName"
    - "id"
    properties:
      dataType:
        type: "string"
        description: "Datatype of the field"
      displayName:
        type: "string"
        description: "UI display-name of the field"
      id:
        type: "integer"
        format: "int32"
        description: "Unique integer id of the field"
      length:
        type: "integer"
        format: "int32"
        description: "Max length of the field.  Only applicable to text, string, and\
          \ text area."
      rest:
        description: "Description of REST API usage attributes"
        $ref: "#/definitions/LeadMapAttribute"
      soap:
        description: "Description of SOAP API usage attributes"
        $ref: "#/definitions/LeadMapAttribute"
    example:
      rest:
        name: "name"
        readOnly: false
      displayName: "displayName"
      dataType: "dataType"
      length: 6
      id: 0
      soap:
        name: "name"
        readOnly: false
  ScheduleCampaignRequest:
    type: "object"
    properties:
      input:
        $ref: "#/definitions/ScheduleCampaignData"
    description: "Record describe how to schedule the campaign"
    example:
      input:
        runAt: "2000-01-23T04:56:07.000+00:00"
        cloneToProgramName: "cloneToProgramName"
        tokens:
        - name: "name"
          value: "value"
        - name: "name"
          value: "value"
  SyncSalesPersonRequest:
    type: "object"
    required:
    - "input"
    properties:
      action:
        type: "string"
        description: "Type of sync operation to perform"
        enum:
        - "createOnly"
        - "updateOnly"
        - "createOrUpdate"
      dedupeBy:
        type: "string"
        description: "Field to deduplicate on.  If the value in the field for a given\
          \ record is not unique, an error will be returned for the individual record."
      input:
        type: "array"
        description: "List of input records"
        items:
          $ref: "#/definitions/SalesPerson"
    example:
      input:
      - reasons:
        - code: "code"
          message: "message"
        - code: "code"
          message: "message"
        id: 0
        seq: 6
        status: "created"
      - reasons:
        - code: "code"
          message: "message"
        - code: "code"
          message: "message"
        id: 0
        seq: 6
        status: "created"
      action: "createOnly"
      dedupeBy: "dedupeBy"
  ResponseOfImportLeadResponse:
    type: "object"
    required:
    - "errors"
    - "requestId"
    - "result"
    - "success"
    - "warnings"
    properties:
      errors:
        type: "array"
        description: "Array of errors that occurred if the request was unsuccessful"
        items:
          $ref: "#/definitions/Error"
      moreResult:
        type: "boolean"
        example: false
        description: "Boolean indicating if there are more results in subsequent pages"
      nextPageToken:
        type: "string"
        description: "Paging token given if the result set exceeded the allowed batch\
          \ size"
      requestId:
        type: "string"
        description: "Id of the request made"
      result:
        type: "array"
        description: "Array of results for individual records in the operation, may\
          \ be empty"
        items:
          $ref: "#/definitions/ImportLeadResponse"
      success:
        type: "boolean"
        example: false
        description: "Whether the request succeeded"
      warnings:
        type: "array"
        description: "Array of warnings given for the operation"
        items:
          $ref: "#/definitions/Warning"
    example:
      result:
      - importId: "importId"
        numOfRowsFailed: 1
        numOfLeadsProcessed: 6
        numOfRowsWithWarning: 5
        batchId: 0
        message: "message"
        status: "status"
      - importId: "importId"
        numOfRowsFailed: 1
        numOfLeadsProcessed: 6
        numOfRowsWithWarning: 5
        batchId: 0
        message: "message"
        status: "status"
      nextPageToken: "nextPageToken"
      requestId: "requestId"
      success: false
      warnings:
      - code: 5
        message: "message"
      - code: 5
        message: "message"
      moreResult: false
      errors:
      - code: 0
        message: "message"
      - code: 0
        message: "message"
  NamedAccountList:
    type: "object"
    required:
    - "marketoGUID"
    - "seq"
    properties:
      createdAt:
        type: "string"
        description: "Datetime when the named account list was created"
      marketoGUID:
        type: "string"
        description: "Unique GUID of the custom object records"
      name:
        type: "string"
        description: "Name of named account list"
      reasons:
        type: "array"
        items:
          $ref: "#/definitions/Reason"
      seq:
        type: "integer"
        format: "int32"
        description: "Integer indicating the sequence of the record in response. \
          \ This value is correlated to the order of the records included in the request\
          \ input.  Seq should only be part of responses and should not be submitted."
      status:
        type: "string"
        enum:
        - "created"
        - "updated"
        - "deleted"
        - "skipped"
        - "added"
        - "removed"
      type:
        type: "string"
        description: "Type of named account list (\"default\" if created by user or\
          \ API, \"external\" if managed by CRM-View)"
      updateable:
        type: "boolean"
        example: false
        description: "Whether the list is updateable (true if created by user or API,\
          \ false if managed by CRM-View)"
      updatedAt:
        type: "string"
        description: "Datetime when the named account list was most recently updated"
    example:
      createdAt: "createdAt"
      updateable: false
      reasons:
      - code: "code"
        message: "message"
      - code: "code"
        message: "message"
      name: "name"
      marketoGUID: "marketoGUID"
      type: "type"
      seq: 0
      status: "created"
      updatedAt: "updatedAt"
  ExportLeadRequest:
    type: "object"
    required:
    - "fields"
    - "filter"
    properties:
      columnHeaderNames:
        description: "File header field names override (corresponds with REST API\
          \ name)"
        $ref: "#/definitions/ColumnHeaderNames"
      fields:
        type: "array"
        description: "Comma-separated list of fields to include in the file"
        items:
          type: "string"
      filter:
        description: "Lead record selection criteria. Can be one of the following:\
          \ \"createdAt\", \"updatedAt\", \"staticListName\", \"staticListId\", \"\
          smartListName\", \"smartListId\""
        $ref: "#/definitions/ExportLeadFilter"
      format:
        type: "string"
        description: "File format to create(\"CSV\", \"TSV\", \"SSV\").  Default is\
          \ \"CSV\""
    example:
      filter:
        createdAt:
          endAt: "endAt"
          startAt: "startAt"
        staticListId: 6
        staticListName: "staticListName"
        smartListId: 0
        smartListName: "smartListName"
        updatedAt:
          endAt: "endAt"
          startAt: "startAt"
      columnHeaderNames: {}
      format: "format"
      fields:
      - "fields"
      - "fields"
  CustomActivityRequest:
    type: "object"
    required:
    - "input"
    properties:
      input:
        type: "array"
        description: "List of custom activities to insert"
        items:
          $ref: "#/definitions/CustomActivity"
    example:
      input:
      - apiName: "apiName"
        activityDate: "activityDate"
        attributes:
        - apiName: "apiName"
          name: "name"
          value: "{}"
        - apiName: "apiName"
          name: "name"
          value: "{}"
        id: 6
        marketoGUID: "marketoGUID"
        primaryAttributeValue: "primaryAttributeValue"
        errors:
        - code: 0
          message: "message"
        - code: 0
          message: "message"
        activityTypeId: 0
        leadId: 1
        status: "created"
      - apiName: "apiName"
        activityDate: "activityDate"
        attributes:
        - apiName: "apiName"
          name: "name"
          value: "{}"
        - apiName: "apiName"
          name: "name"
          value: "{}"
        id: 6
        marketoGUID: "marketoGUID"
        primaryAttributeValue: "primaryAttributeValue"
        errors:
        - code: 0
          message: "message"
        - code: 0
          message: "message"
        activityTypeId: 0
        leadId: 1
        status: "created"
  DeleteLeadRequest:
    type: "object"
    required:
    - "input"
    properties:
      input:
        type: "array"
        description: "List of leads for input"
        items:
          $ref: "#/definitions/LeadInputData"
    example:
      input:
      - id: 0
      - id: 0
  Attribute:
    type: "object"
    required:
    - "name"
    - "value"
    properties:
      apiName:
        type: "string"
      name:
        type: "string"
        description: "Name of the attribute"
      value:
        type: "object"
        description: "Value of the attribute"
        properties: {}
    description: "Name-Value pair"
    example:
      apiName: "apiName"
      name: "name"
      value: "{}"
  SyncNamedAccountRequest:
    type: "object"
    required:
    - "input"
    properties:
      action:
        type: "string"
        description: "Type of sync operation to perform"
        enum:
        - "createOnly"
        - "updateOnly"
        - "createOrUpdate"
      dedupeBy:
        type: "string"
        description: "Field to deduplicate on.  If the value in the field for a given\
          \ record is not unique, an error will be returned for the individual record."
      input:
        type: "array"
        description: "List of input records"
        items:
          $ref: "#/definitions/NamedAccount"
    example:
      input:
      - reasons:
        - code: "code"
          message: "message"
        - code: "code"
          message: "message"
        marketoGUID: "marketoGUID"
        seq: 0
        status: "created"
      - reasons:
        - code: "code"
          message: "message"
        - code: "code"
          message: "message"
        marketoGUID: "marketoGUID"
        seq: 0
        status: "created"
      action: "createOnly"
      dedupeBy: "dedupeBy"
  DeleteNamedAccountListRequest:
    type: "object"
    required:
    - "input"
    properties:
      deleteBy:
        type: "string"
        description: "Key to use for deletion of the record"
      input:
        type: "array"
        description: "List of input records"
        items:
          $ref: "#/definitions/NamedAccountList"
    example:
      input:
      - createdAt: "createdAt"
        updateable: false
        reasons:
        - code: "code"
          message: "message"
        - code: "code"
          message: "message"
        name: "name"
        marketoGUID: "marketoGUID"
        type: "type"
        seq: 0
        status: "created"
        updatedAt: "updatedAt"
      - createdAt: "createdAt"
        updateable: false
        reasons:
        - code: "code"
          message: "message"
        - code: "code"
          message: "message"
        name: "name"
        marketoGUID: "marketoGUID"
        type: "type"
        seq: 0
        status: "created"
        updatedAt: "updatedAt"
      deleteBy: "deleteBy"
  ResponseOfCampaign:
    type: "object"
    required:
    - "errors"
    - "requestId"
    - "result"
    - "success"
    - "warnings"
    properties:
      errors:
        type: "array"
        description: "Array of errors that occurred if the request was unsuccessful"
        items:
          $ref: "#/definitions/Error"
      nextPageToken:
        type: "string"
        description: "Paging token given if the result set exceeded the allowed batch\
          \ size"
      requestId:
        type: "string"
        description: "Id of the request made"
      result:
        type: "array"
        description: "Array of results for individual records in the operation, may\
          \ be empty"
        items:
          $ref: "#/definitions/Campaign"
      success:
        type: "boolean"
        example: false
        description: "Whether the request succeeded"
      warnings:
        type: "array"
        description: "Array of warnings given for the operation"
        items:
          $ref: "#/definitions/Warning"
    example:
      result:
      - createdAt: "createdAt"
        programName: "programName"
        name: "name"
        active: false
        description: "description"
        workspaceName: "workspaceName"
        id: 0
        type: "batch"
        programId: 6
        updatedAt: "updatedAt"
      - createdAt: "createdAt"
        programName: "programName"
        name: "name"
        active: false
        description: "description"
        workspaceName: "workspaceName"
        id: 0
        type: "batch"
        programId: 6
        updatedAt: "updatedAt"
      nextPageToken: "nextPageToken"
      requestId: "requestId"
      success: false
      warnings:
      - code: 5
        message: "message"
      - code: 5
        message: "message"
      errors:
      - code: 0
        message: "message"
      - code: 0
        message: "message"
  DateRange:
    type: "object"
    properties:
      endAt:
        type: "string"
        description: "End of date range filter (ISO 8601-format)"
      startAt:
        type: "string"
        description: "Start of date range filter (ISO-8601 format)"
    example:
      endAt: "endAt"
      startAt: "startAt"
  ResponseOfChangeLeadProgramStatusOutputData:
    type: "object"
    required:
    - "errors"
    - "requestId"
    - "result"
    - "success"
    - "warnings"
    properties:
      errors:
        type: "array"
        description: "Array of errors that occurred if the request was unsuccessful"
        items:
          $ref: "#/definitions/Error"
      moreResult:
        type: "boolean"
        example: false
        description: "Boolean indicating if there are more results in subsequent pages"
      nextPageToken:
        type: "string"
        description: "Paging token given if the result set exceeded the allowed batch\
          \ size"
      requestId:
        type: "string"
        description: "Id of the request made"
      result:
        type: "array"
        description: "Array of results for individual records in the operation, may\
          \ be empty"
        items:
          $ref: "#/definitions/ChangeLeadProgramStatusOutputData"
      success:
        type: "boolean"
        example: false
        description: "Whether the request succeeded"
      warnings:
        type: "array"
        description: "Array of warnings given for the operation"
        items:
          $ref: "#/definitions/Warning"
    example:
      result:
      - reasons:
        - code: "code"
          message: "message"
        - code: "code"
          message: "message"
        id: 0
        status: "status"
      - reasons:
        - code: "code"
          message: "message"
        - code: "code"
          message: "message"
        id: 0
        status: "status"
      nextPageToken: "nextPageToken"
      requestId: "requestId"
      success: false
      warnings:
      - code: 5
        message: "message"
      - code: 5
        message: "message"
      moreResult: false
      errors:
      - code: 0
        message: "message"
      - code: 0
        message: "message"
  ResponseOfVoid:
    type: "object"
    required:
    - "errors"
    - "requestId"
    - "success"
    - "warnings"
    properties:
      errors:
        type: "array"
        description: "Array of errors that occurred if the request was unsuccessful"
        items:
          $ref: "#/definitions/Error"
      moreResult:
        type: "boolean"
        example: false
        description: "Boolean indicating if there are more results in subsequent pages"
      nextPageToken:
        type: "string"
        description: "Paging token given if the result set exceeded the allowed batch\
          \ size"
      requestId:
        type: "string"
        description: "Id of the request made"
      success:
        type: "boolean"
        example: false
        description: "Whether the request succeeded"
      warnings:
        type: "array"
        description: "Array of warnings given for the operation"
        items:
          $ref: "#/definitions/Warning"
    example:
      nextPageToken: "nextPageToken"
      requestId: "requestId"
      success: false
      warnings:
      - code: 5
        message: "message"
      - code: 5
        message: "message"
      moreResult: false
      errors:
      - code: 0
        message: "message"
      - code: 0
        message: "message"
  ImportCustomObjectResponse:
    type: "object"
    required:
    - "batchId"
    - "objectApiName"
    - "operation"
    - "status"
    properties:
      batchId:
        type: "integer"
        format: "int32"
        description: "Unique integer id of the import batch"
      importTime:
        type: "string"
        description: "Time spent on the batch"
      message:
        type: "string"
        description: "Status message of the batch"
      numOfObjectsProcessed:
        type: "integer"
        format: "int32"
        description: "Number of rows processed so far"
      numOfRowsFailed:
        type: "integer"
        format: "int32"
        description: "Number of rows failed so far"
      numOfRowsWithWarning:
        type: "integer"
        format: "int32"
        description: "Number of rows with a warning so far"
      objectApiName:
        type: "string"
        description: "Object API Name"
      operation:
        type: "string"
        description: "Bulk operation type. Can be import or export"
      status:
        type: "string"
        description: "Status of the batch"
    description: "Response containing import status information"
    example:
      numOfRowsFailed: 1
      numOfRowsWithWarning: 5
      objectApiName: "objectApiName"
      batchId: 0
      message: "message"
      numOfObjectsProcessed: 6
      operation: "operation"
      importTime: "importTime"
      status: "status"
  AddNamedAccountListMemberRequest:
    type: "object"
    required:
    - "input"
    properties:
      input:
        type: "array"
        description: "List of input records"
        items:
          $ref: "#/definitions/NamedAccount"
    example:
      input:
      - reasons:
        - code: "code"
          message: "message"
        - code: "code"
          message: "message"
        marketoGUID: "marketoGUID"
        seq: 0
        status: "created"
      - reasons:
        - code: "code"
          message: "message"
        - code: "code"
          message: "message"
        marketoGUID: "marketoGUID"
        seq: 0
        status: "created"
  ExportActivityFilter:
    type: "object"
    required:
    - "createdAt"
    properties:
      activityTypeIds:
        type: "array"
        description: "List of activity type ids to filter on"
        items:
          type: "integer"
          format: "int32"
      createdAt:
        description: "Date range to filter new activities on"
        $ref: "#/definitions/DateRange"
    example:
      createdAt:
        endAt: "endAt"
        startAt: "startAt"
      activityTypeIds:
      - 0
      - 0
  ResponseOfListOperationOutputData:
    type: "object"
    required:
    - "errors"
    - "requestId"
    - "result"
    - "success"
    - "warnings"
    properties:
      errors:
        type: "array"
        description: "Array of errors that occurred if the request was unsuccessful"
        items:
          $ref: "#/definitions/Error"
      moreResult:
        type: "boolean"
        example: false
        description: "Boolean indicating if there are more results in subsequent pages"
      nextPageToken:
        type: "string"
        description: "Paging token given if the result set exceeded the allowed batch\
          \ size"
      requestId:
        type: "string"
        description: "Id of the request made"
      result:
        type: "array"
        description: "Array of results for individual records in the operation, may\
          \ be empty"
        items:
          $ref: "#/definitions/ListOperationOutputData"
      success:
        type: "boolean"
        example: false
        description: "Whether the request succeeded"
      warnings:
        type: "array"
        description: "Array of warnings given for the operation"
        items:
          $ref: "#/definitions/Warning"
    example:
      result:
      - reasons:
        - code: "code"
          message: "message"
        - code: "code"
          message: "message"
        id: 0
        status: "status"
      - reasons:
        - code: "code"
          message: "message"
        - code: "code"
          message: "message"
        id: 0
        status: "status"
      nextPageToken: "nextPageToken"
      requestId: "requestId"
      success: false
      warnings:
      - code: 5
        message: "message"
      - code: 5
        message: "message"
      moreResult: false
      errors:
      - code: 0
        message: "message"
      - code: 0
        message: "message"
  Campaign:
    type: "object"
    required:
    - "createdAt"
    - "id"
    - "name"
    - "type"
    - "updatedAt"
    properties:
      active:
        type: "boolean"
        example: false
        description: "Whether the campaign is active.  Only applicable to trigger\
          \ campaigns"
      createdAt:
        type: "string"
        description: "Datetime when the campaign was created"
      description:
        type: "string"
        description: "Description of the Smart Campaign"
      id:
        type: "integer"
        format: "int32"
        description: "Unique integer id of the Smart Campaign"
      name:
        type: "string"
        description: "Name of the Smart Campaign"
      programId:
        type: "integer"
        format: "int32"
        description: "Id of the parent program if applicable"
      programName:
        type: "string"
        description: "Name of the parent program if applicable"
      type:
        type: "string"
        description: "Type of the Smart Campaign"
        enum:
        - "batch"
        - "trigger"
      updatedAt:
        type: "string"
        description: "Datetime when the campaign was most recently updated"
      workspaceName:
        type: "string"
        description: "Name of the parent workspace if applicable"
    description: "Record of a Marketo Smart Campaign"
    example:
      createdAt: "createdAt"
      programName: "programName"
      name: "name"
      active: false
      description: "description"
      workspaceName: "workspaceName"
      id: 0
      type: "batch"
      programId: 6
      updatedAt: "updatedAt"
  DeleteNamedAccountRequest:
    type: "object"
    required:
    - "input"
    properties:
      deleteBy:
        type: "string"
        description: "Key to use for deletion of the record"
      input:
        type: "array"
        description: "List of input records"
        items:
          $ref: "#/definitions/NamedAccount"
    example:
      input:
      - reasons:
        - code: "code"
          message: "message"
        - code: "code"
          message: "message"
        marketoGUID: "marketoGUID"
        seq: 0
        status: "created"
      - reasons:
        - code: "code"
          message: "message"
        - code: "code"
          message: "message"
        marketoGUID: "marketoGUID"
        seq: 0
        status: "created"
      deleteBy: "deleteBy"
  ResponseOfLead:
    type: "object"
    required:
    - "errors"
    - "requestId"
    - "result"
    - "success"
    - "warnings"
    properties:
      errors:
        type: "array"
        description: "Array of errors that occurred if the request was unsuccessful"
        items:
          $ref: "#/definitions/Error"
      moreResult:
        type: "boolean"
        example: false
        description: "Boolean indicating if there are more results in subsequent pages"
      nextPageToken:
        type: "string"
        description: "Paging token given if the result set exceeded the allowed batch\
          \ size"
      requestId:
        type: "string"
        description: "Id of the request made"
      result:
        type: "array"
        description: "Array of results for individual records in the operation, may\
          \ be empty"
        items:
          $ref: "#/definitions/Lead"
      success:
        type: "boolean"
        example: false
        description: "Whether the request succeeded"
      warnings:
        type: "array"
        description: "Array of warnings given for the operation"
        items:
          $ref: "#/definitions/Warning"
    example:
      result:
      - reason:
          code: "code"
          message: "message"
        id: 0
        membership:
          isExhausted: false
          stream: "stream"
          nurtureCadence: "nurtureCadence"
          acquiredBy: false
          membershipDate: "membershipDate"
          reachedSuccess: false
          progressionStatus: "progressionStatus"
        status: "status"
      - reason:
          code: "code"
          message: "message"
        id: 0
        membership:
          isExhausted: false
          stream: "stream"
          nurtureCadence: "nurtureCadence"
          acquiredBy: false
          membershipDate: "membershipDate"
          reachedSuccess: false
          progressionStatus: "progressionStatus"
        status: "status"
      nextPageToken: "nextPageToken"
      requestId: "requestId"
      success: false
      warnings:
      - code: 5
        message: "message"
      - code: 5
        message: "message"
      moreResult: false
      errors:
      - code: 0
        message: "message"
      - code: 0
        message: "message"
  Activity:
    type: "object"
    required:
    - "activityDate"
    - "activityTypeId"
    - "attributes"
    - "id"
    - "leadId"
    - "primaryAttributeValue"
    - "primaryAttributeValueId"
    properties:
      activityDate:
        type: "string"
        format: "date-time"
        description: "Datetime of the activity"
      activityTypeId:
        type: "integer"
        format: "int32"
        description: "Id of the activity type"
      attributes:
        type: "array"
        description: "List of secondary attributes"
        items:
          $ref: "#/definitions/Attribute"
      campaignId:
        type: "integer"
        format: "int64"
        description: "Id of the associated Smart Campaign, if applicable"
      id:
        type: "integer"
        format: "int64"
        description: "Integer id of the activity.  For instances which have been migrated\
          \ to Activity Service, this field may not be present, and should not be\
          \ treated as unique."
      leadId:
        type: "integer"
        format: "int64"
        description: "Id of the lead associated to the activity"
      marketoGUID:
        type: "string"
        description: "Unique id of the activity (128 character string)"
      primaryAttributeValue:
        type: "string"
        description: "Value of the primary attribute"
      primaryAttributeValueId:
        type: "integer"
        format: "int64"
        description: "Id of the primary attribute field"
    example:
      activityDate: "2000-01-23T04:56:07.000+00:00"
      campaignId: 6
      attributes:
      - apiName: "apiName"
        name: "name"
        value: "{}"
      - apiName: "apiName"
        name: "name"
        value: "{}"
      id: 1
      marketoGUID: "marketoGUID"
      primaryAttributeValue: "primaryAttributeValue"
      primaryAttributeValueId: 5
      activityTypeId: 0
      leadId: 5
  CustomActivityTypeAttributeRequest:
    type: "object"
    properties:
      attributes:
        type: "array"
        description: "List of attributes to add to the activity type"
        items:
          $ref: "#/definitions/CustomActivityTypeAttribute"
    example:
      attributes:
      - apiName: "apiName"
        isPrimary: false
        dataType: "string"
        name: "name"
        description: "description"
      - apiName: "apiName"
        isPrimary: false
        dataType: "string"
        name: "name"
        description: "description"
  TriggerCampaignData:
    type: "object"
    required:
    - "leads"
    properties:
      leads:
        type: "array"
        description: "List of leads for input"
        items:
          $ref: "#/definitions/InputLead"
      tokens:
        type: "array"
        description: "List of my tokens to replace during the run of the target campaign.\
          \  The tokens must be available in a parent program or folder to be replaced\
          \ during the run"
        items:
          $ref: "#/definitions/Token"
    example:
      leads:
      - id: 0
      - id: 0
      tokens:
      - name: "name"
        value: "value"
      - name: "name"
        value: "value"
  ObjectMetaData:
    type: "object"
    properties:
      createdAt:
        type: "string"
        format: "date-time"
        description: "Datetime when the object type was created"
      dedupeFields:
        type: "array"
        description: "List of dedupe fields.  Arrays with multiple members are compound\
          \ keys"
        items:
          type: "string"
      description:
        type: "string"
        description: "Description of the object type"
      displayName:
        type: "string"
        description: "UI display-name of the object type"
      fields:
        type: "array"
        description: "List of fields available on the object type"
        items:
          $ref: "#/definitions/ObjectField"
      idField:
        type: "string"
        description: "Primary id key of the object type"
      name:
        type: "string"
        description: "Name of the object type"
      relationships:
        type: "array"
        description: "List of relationships which the object has"
        items:
          $ref: "#/definitions/ObjectRelation"
      searchableFields:
        type: "array"
        description: "List of fields valid for use as a filter type in a query"
        items:
          type: "array"
          items:
            type: "string"
      updatedAt:
        type: "string"
        format: "date-time"
        description: "Datetime when the object type was most recently updated"
    example:
      createdAt: "2000-01-23T04:56:07.000+00:00"
      idField: "idField"
      relationships:
      - field: "field"
        type: "type"
        relatedTo:
          field: "field"
          name: "name"
      - field: "field"
        type: "type"
        relatedTo:
          field: "field"
          name: "name"
      searchableFields:
      - - "searchableFields"
        - "searchableFields"
      - - "searchableFields"
        - "searchableFields"
      displayName: "displayName"
      name: "name"
      dedupeFields:
      - "dedupeFields"
      - "dedupeFields"
      description: "description"
      fields:
      - updateable: false
        displayName: "displayName"
        dataType: "dataType"
        length: 0
        name: "name"
      - updateable: false
        displayName: "displayName"
        dataType: "dataType"
        length: 0
        name: "name"
      updatedAt: "2000-01-23T04:56:07.000+00:00"
  CustomActivityTypeRequest:
    type: "object"
    required:
    - "apiName"
    - "filterName"
    - "name"
    - "primaryAttribute"
    - "triggerName"
    properties:
      apiName:
        type: "string"
      description:
        type: "string"
      filterName:
        type: "string"
        description: "Human-readable name of the associated filter"
      name:
        type: "string"
        description: "Human-readable display name of the activity type"
      primaryAttribute:
        description: "Primary attribute of the activity type"
        $ref: "#/definitions/CustomActivityTypeAttribute"
      triggerName:
        type: "string"
        description: "Human-readable name of the associated trigger"
    example:
      apiName: "apiName"
      primaryAttribute:
        apiName: "apiName"
        isPrimary: false
        dataType: "string"
        name: "name"
        description: "description"
      triggerName: "triggerName"
      filterName: "filterName"
      name: "name"
      description: "description"
  ListOperationRequest:
    type: "object"
    required:
    - "input"
    properties:
      input:
        type: "array"
        description: "List of leads for input"
        items:
          $ref: "#/definitions/LeadInputData"
    example:
      input:
      - id: 0
      - id: 0
  ResponseOfLeadPartition:
    type: "object"
    required:
    - "errors"
    - "requestId"
    - "result"
    - "success"
    - "warnings"
    properties:
      errors:
        type: "array"
        description: "Array of errors that occurred if the request was unsuccessful"
        items:
          $ref: "#/definitions/Error"
      moreResult:
        type: "boolean"
        example: false
        description: "Boolean indicating if there are more results in subsequent pages"
      nextPageToken:
        type: "string"
        description: "Paging token given if the result set exceeded the allowed batch\
          \ size"
      requestId:
        type: "string"
        description: "Id of the request made"
      result:
        type: "array"
        description: "Array of results for individual records in the operation, may\
          \ be empty"
        items:
          $ref: "#/definitions/LeadPartition"
      success:
        type: "boolean"
        example: false
        description: "Whether the request succeeded"
      warnings:
        type: "array"
        description: "Array of warnings given for the operation"
        items:
          $ref: "#/definitions/Warning"
    example:
      result:
      - name: "name"
        description: "description"
        id: 0
      - name: "name"
        description: "description"
        id: 0
      nextPageToken: "nextPageToken"
      requestId: "requestId"
      success: false
      warnings:
      - code: 5
        message: "message"
      - code: 5
        message: "message"
      moreResult: false
      errors:
      - code: 0
        message: "message"
      - code: 0
        message: "message"
  ResponseOfObjectMetaData:
    type: "object"
    required:
    - "errors"
    - "requestId"
    - "result"
    - "success"
    - "warnings"
    properties:
      errors:
        type: "array"
        description: "Array of errors that occurred if the request was unsuccessful"
        items:
          $ref: "#/definitions/Error"
      moreResult:
        type: "boolean"
        example: false
        description: "Boolean indicating if there are more results in subsequent pages"
      nextPageToken:
        type: "string"
        description: "Paging token given if the result set exceeded the allowed batch\
          \ size"
      requestId:
        type: "string"
        description: "Id of the request made"
      result:
        type: "array"
        description: "Array of results for individual records in the operation, may\
          \ be empty"
        items:
          $ref: "#/definitions/ObjectMetaData"
      success:
        type: "boolean"
        example: false
        description: "Whether the request succeeded"
      warnings:
        type: "array"
        description: "Array of warnings given for the operation"
        items:
          $ref: "#/definitions/Warning"
    example:
      result:
      - createdAt: "2000-01-23T04:56:07.000+00:00"
        idField: "idField"
        relationships:
        - field: "field"
          type: "type"
          relatedTo:
            field: "field"
            name: "name"
        - field: "field"
          type: "type"
          relatedTo:
            field: "field"
            name: "name"
        searchableFields:
        - - "searchableFields"
          - "searchableFields"
        - - "searchableFields"
          - "searchableFields"
        displayName: "displayName"
        name: "name"
        dedupeFields:
        - "dedupeFields"
        - "dedupeFields"
        description: "description"
        fields:
        - updateable: false
          displayName: "displayName"
          dataType: "dataType"
          length: 0
          name: "name"
        - updateable: false
          displayName: "displayName"
          dataType: "dataType"
          length: 0
          name: "name"
        updatedAt: "2000-01-23T04:56:07.000+00:00"
      - createdAt: "2000-01-23T04:56:07.000+00:00"
        idField: "idField"
        relationships:
        - field: "field"
          type: "type"
          relatedTo:
            field: "field"
            name: "name"
        - field: "field"
          type: "type"
          relatedTo:
            field: "field"
            name: "name"
        searchableFields:
        - - "searchableFields"
          - "searchableFields"
        - - "searchableFields"
          - "searchableFields"
        displayName: "displayName"
        name: "name"
        dedupeFields:
        - "dedupeFields"
        - "dedupeFields"
        description: "description"
        fields:
        - updateable: false
          displayName: "displayName"
          dataType: "dataType"
          length: 0
          name: "name"
        - updateable: false
          displayName: "displayName"
          dataType: "dataType"
          length: 0
          name: "name"
        updatedAt: "2000-01-23T04:56:07.000+00:00"
      nextPageToken: "nextPageToken"
      requestId: "requestId"
      success: false
      warnings:
      - code: 5
        message: "message"
      - code: 5
        message: "message"
      moreResult: false
      errors:
      - code: 0
        message: "message"
      - code: 0
        message: "message"
  InputLead:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        format: "int64"
        description: "Unique integer id of a lead record"
    description: "Lead record containing only lead id"
    example:
      id: 0
  CustomActivityType:
    type: "object"
    properties:
      apiName:
        type: "string"
        description: "API Name of the type.  The API name must be unique and alphanumeric,\
          \ containing at least one letter.  It is highly recommended to prepend a\
          \ unique namespace of up to sixteen characters to the API name.  Required\
          \ on creation"
      attributes:
        type: "array"
        description: "List of attributes for the activity type.  May only be added\
          \ or update through Create or Update Custom Activity Type Attributes"
        items:
          $ref: "#/definitions/CustomActivityTypeAttribute"
      createdAt:
        type: "string"
        description: "Datetime when the activity type was created"
      description:
        type: "string"
        description: "Description of the activity type"
      filterName:
        type: "string"
        description: "Human-readable name for the associated filter of the activity\
          \ type.  Required on creation"
      id:
        type: "integer"
        format: "int32"
      name:
        type: "string"
        description: "Human-readable display name of the type.  Required on creation"
      primaryAttribute:
        description: "Primary Attribute of the activity type.  Required on creation"
        $ref: "#/definitions/CustomActivityTypeAttribute"
      status:
        type: "string"
        description: "State of the activity type"
        enum:
        - "draft"
        - "approved"
        - "deleted"
        - "approved with draft"
      triggerName:
        type: "string"
        description: "Human-readable name for the associated trigger of the activity\
          \ type.  Required on creation"
      updatedAt:
        type: "string"
        description: "Datetime when the activity type was most recently updated"
    example:
      createdAt: "createdAt"
      apiName: "apiName"
      primaryAttribute:
        apiName: "apiName"
        isPrimary: false
        dataType: "string"
        name: "name"
        description: "description"
      triggerName: "triggerName"
      filterName: "filterName"
      name: "name"
      description: "description"
      attributes:
      - apiName: "apiName"
        isPrimary: false
        dataType: "string"
        name: "name"
        description: "description"
      - apiName: "apiName"
        isPrimary: false
        dataType: "string"
        name: "name"
        description: "description"
      id: 0
      status: "draft"
      updatedAt: "updatedAt"
  ChangeLeadProgramStatusRequest:
    type: "object"
    required:
    - "input"
    - "status"
    properties:
      input:
        type: "array"
        description: "List of leads for input"
        items:
          $ref: "#/definitions/LeadLookupInputData"
      status:
        type: "string"
        description: "Program status of the record.  Permissible values can be retrieve\
          \ from the Get Channel by Name API for the designated program's channel"
    example:
      input:
      - id: 0
      - id: 0
      status: "status"
  ResponseOfNamedAccountList:
    type: "object"
    required:
    - "errors"
    - "requestId"
    - "result"
    - "success"
    - "warnings"
    properties:
      errors:
        type: "array"
        description: "Array of errors that occurred if the request was unsuccessful"
        items:
          $ref: "#/definitions/Error"
      moreResult:
        type: "boolean"
        example: false
        description: "Boolean indicating if there are more results in subsequent pages"
      nextPageToken:
        type: "string"
        description: "Paging token given if the result set exceeded the allowed batch\
          \ size"
      requestId:
        type: "string"
        description: "Id of the request made"
      result:
        type: "array"
        description: "Array of results for individual records in the operation, may\
          \ be empty"
        items:
          $ref: "#/definitions/NamedAccountList"
      success:
        type: "boolean"
        example: false
        description: "Whether the request succeeded"
      warnings:
        type: "array"
        description: "Array of warnings given for the operation"
        items:
          $ref: "#/definitions/Warning"
    example:
      result:
      - createdAt: "createdAt"
        updateable: false
        reasons:
        - code: "code"
          message: "message"
        - code: "code"
          message: "message"
        name: "name"
        marketoGUID: "marketoGUID"
        type: "type"
        seq: 0
        status: "created"
        updatedAt: "updatedAt"
      - createdAt: "createdAt"
        updateable: false
        reasons:
        - code: "code"
          message: "message"
        - code: "code"
          message: "message"
        name: "name"
        marketoGUID: "marketoGUID"
        type: "type"
        seq: 0
        status: "created"
        updatedAt: "updatedAt"
      nextPageToken: "nextPageToken"
      requestId: "requestId"
      success: false
      warnings:
      - code: 5
        message: "message"
      - code: 5
        message: "message"
      moreResult: false
      errors:
      - code: 0
        message: "message"
      - code: 0
        message: "message"
  ResponseOfLeadAttribute:
    type: "object"
    required:
    - "errors"
    - "requestId"
    - "result"
    - "success"
    - "warnings"
    properties:
      errors:
        type: "array"
        description: "Array of errors that occurred if the request was unsuccessful"
        items:
          $ref: "#/definitions/Error"
      moreResult:
        type: "boolean"
        example: false
        description: "Boolean indicating if there are more results in subsequent pages"
      nextPageToken:
        type: "string"
        description: "Paging token given if the result set exceeded the allowed batch\
          \ size"
      requestId:
        type: "string"
        description: "Id of the request made"
      result:
        type: "array"
        description: "Array of results for individual records in the operation, may\
          \ be empty"
        items:
          $ref: "#/definitions/LeadAttribute"
      success:
        type: "boolean"
        example: false
        description: "Whether the request succeeded"
      warnings:
        type: "array"
        description: "Array of warnings given for the operation"
        items:
          $ref: "#/definitions/Warning"
    example:
      result:
      - rest:
          name: "name"
          readOnly: false
        displayName: "displayName"
        dataType: "dataType"
        length: 6
        id: 0
        soap:
          name: "name"
          readOnly: false
      - rest:
          name: "name"
          readOnly: false
        displayName: "displayName"
        dataType: "dataType"
        length: 6
        id: 0
        soap:
          name: "name"
          readOnly: false
      nextPageToken: "nextPageToken"
      requestId: "requestId"
      success: false
      warnings:
      - code: 5
        message: "message"
      - code: 5
        message: "message"
      moreResult: false
      errors:
      - code: 0
        message: "message"
      - code: 0
        message: "message"
  ResponseOfCompany:
    type: "object"
    required:
    - "errors"
    - "requestId"
    - "result"
    - "success"
    - "warnings"
    properties:
      errors:
        type: "array"
        description: "Array of errors that occurred if the request was unsuccessful"
        items:
          $ref: "#/definitions/Error"
      moreResult:
        type: "boolean"
        example: false
        description: "Boolean indicating if there are more results in subsequent pages"
      nextPageToken:
        type: "string"
        description: "Paging token given if the result set exceeded the allowed batch\
          \ size"
      requestId:
        type: "string"
        description: "Id of the request made"
      result:
        type: "array"
        description: "Array of results for individual records in the operation, may\
          \ be empty"
        items:
          $ref: "#/definitions/Company"
      success:
        type: "boolean"
        example: false
        description: "Whether the request succeeded"
      warnings:
        type: "array"
        description: "Array of warnings given for the operation"
        items:
          $ref: "#/definitions/Warning"
    example:
      result:
      - reasons:
        - code: "code"
          message: "message"
        - code: "code"
          message: "message"
        id: 0
        seq: 6
        status: "created"
      - reasons:
        - code: "code"
          message: "message"
        - code: "code"
          message: "message"
        id: 0
        seq: 6
        status: "created"
      nextPageToken: "nextPageToken"
      requestId: "requestId"
      success: false
      warnings:
      - code: 5
        message: "message"
      - code: 5
        message: "message"
      moreResult: false
      errors:
      - code: 0
        message: "message"
      - code: 0
        message: "message"
  ResponseOfUsageData:
    type: "object"
    required:
    - "errors"
    - "requestId"
    - "result"
    - "success"
    - "warnings"
    properties:
      errors:
        type: "array"
        description: "Array of errors that occurred if the request was unsuccessful"
        items:
          $ref: "#/definitions/Error"
      moreResult:
        type: "boolean"
        example: false
        description: "Boolean indicating if there are more results in subsequent pages"
      nextPageToken:
        type: "string"
        description: "Paging token given if the result set exceeded the allowed batch\
          \ size"
      requestId:
        type: "string"
        description: "Id of the request made"
      result:
        type: "array"
        description: "Array of results for individual records in the operation, may\
          \ be empty"
        items:
          $ref: "#/definitions/UsageData"
      success:
        type: "boolean"
        example: false
        description: "Whether the request succeeded"
      warnings:
        type: "array"
        description: "Array of warnings given for the operation"
        items:
          $ref: "#/definitions/Warning"
    example:
      result:
      - date: "2000-01-23T04:56:07.000+00:00"
        total: 1
        count: 0
        errors:
        - count: 6
          errorCode: "errorCode"
        - count: 6
          errorCode: "errorCode"
        users:
        - count: 5
          userId: "userId"
        - count: 5
          userId: "userId"
      - date: "2000-01-23T04:56:07.000+00:00"
        total: 1
        count: 0
        errors:
        - count: 6
          errorCode: "errorCode"
        - count: 6
          errorCode: "errorCode"
        users:
        - count: 5
          userId: "userId"
        - count: 5
          userId: "userId"
      nextPageToken: "nextPageToken"
      requestId: "requestId"
      success: false
      warnings:
      - code: 5
        message: "message"
      - code: 5
        message: "message"
      moreResult: false
      errors:
      - code: 0
        message: "message"
      - code: 0
        message: "message"
  ObjectRelation:
    type: "object"
    properties:
      field:
        type: "string"
        description: "Name of the object relationship field"
      relatedTo:
        description: "Object to which the field is linked"
        $ref: "#/definitions/RelatedObject"
      type:
        type: "string"
        description: "Type of the relationship field"
    example:
      field: "field"
      type: "type"
      relatedTo:
        field: "field"
        name: "name"
  Warning:
    type: "object"
    required:
    - "code"
    - "message"
    properties:
      code:
        type: "integer"
        format: "int32"
        description: "Integer code of the warning"
      message:
        type: "string"
        description: "Message describing the warning"
    example:
      code: 5
      message: "message"
  ResponseOfExportResponse:
    type: "object"
    required:
    - "errors"
    - "requestId"
    - "result"
    - "success"
    - "warnings"
    properties:
      errors:
        type: "array"
        description: "Array of errors that occurred if the request was unsuccessful"
        items:
          $ref: "#/definitions/Error"
      requestId:
        type: "string"
        description: "Id of the request made"
      result:
        type: "array"
        description: "Array of results for individual records in the operation, may\
          \ be empty"
        items:
          $ref: "#/definitions/ExportResponse"
      success:
        type: "boolean"
        example: false
        description: "Whether the request succeeded"
      warnings:
        type: "array"
        description: "Array of warnings given for the operation"
        items:
          $ref: "#/definitions/Warning"
    example:
      result:
      - createdAt: "2000-01-23T04:56:07.000+00:00"
        queuedAt: "2000-01-23T04:56:07.000+00:00"
        fileSize: 6
        numberOfRecords: 1
        format: "format"
        startedAt: "2000-01-23T04:56:07.000+00:00"
        exportId: "exportId"
        errorMsg: "errorMsg"
        finishedAt: "2000-01-23T04:56:07.000+00:00"
        status: "status"
      - createdAt: "2000-01-23T04:56:07.000+00:00"
        queuedAt: "2000-01-23T04:56:07.000+00:00"
        fileSize: 6
        numberOfRecords: 1
        format: "format"
        startedAt: "2000-01-23T04:56:07.000+00:00"
        exportId: "exportId"
        errorMsg: "errorMsg"
        finishedAt: "2000-01-23T04:56:07.000+00:00"
        status: "status"
      requestId: "requestId"
      success: false
      warnings:
      - code: 5
        message: "message"
      - code: 5
        message: "message"
      errors:
      - code: 0
        message: "message"
      - code: 0
        message: "message"
  ResponseOfExportResponseWithToken:
    type: "object"
    required:
    - "errors"
    - "requestId"
    - "result"
    - "success"
    - "warnings"
    properties:
      errors:
        type: "array"
        description: "Array of errors that occurred if the request was unsuccessful"
        items:
          $ref: "#/definitions/Error"
      nextPageToken:
        type: "string"
        description: "Paging token given if the result set exceeded the allowed batch\
          \ size"
      requestId:
        type: "string"
        description: "Id of the request made"
      result:
        type: "array"
        description: "Array of results for individual records in the operation, may\
          \ be empty"
        items:
          $ref: "#/definitions/ExportResponse"
      success:
        type: "boolean"
        example: false
        description: "Whether the request succeeded"
      warnings:
        type: "array"
        description: "Array of warnings given for the operation"
        items:
          $ref: "#/definitions/Warning"
    example:
      result:
      - createdAt: "2000-01-23T04:56:07.000+00:00"
        queuedAt: "2000-01-23T04:56:07.000+00:00"
        fileSize: 6
        numberOfRecords: 1
        format: "format"
        startedAt: "2000-01-23T04:56:07.000+00:00"
        exportId: "exportId"
        errorMsg: "errorMsg"
        finishedAt: "2000-01-23T04:56:07.000+00:00"
        status: "status"
      - createdAt: "2000-01-23T04:56:07.000+00:00"
        queuedAt: "2000-01-23T04:56:07.000+00:00"
        fileSize: 6
        numberOfRecords: 1
        format: "format"
        startedAt: "2000-01-23T04:56:07.000+00:00"
        exportId: "exportId"
        errorMsg: "errorMsg"
        finishedAt: "2000-01-23T04:56:07.000+00:00"
        status: "status"
      nextPageToken: "nextPageToken"
      requestId: "requestId"
      success: false
      warnings:
      - code: 5
        message: "message"
      - code: 5
        message: "message"
      errors:
      - code: 0
        message: "message"
      - code: 0
        message: "message"
  ResponseOfCustomObject:
    type: "object"
    required:
    - "errors"
    - "requestId"
    - "result"
    - "success"
    - "warnings"
    properties:
      errors:
        type: "array"
        description: "Array of errors that occurred if the request was unsuccessful"
        items:
          $ref: "#/definitions/Error"
      moreResult:
        type: "boolean"
        example: false
        description: "Boolean indicating if there are more results in subsequent pages"
      nextPageToken:
        type: "string"
        description: "Paging token given if the result set exceeded the allowed batch\
          \ size"
      requestId:
        type: "string"
        description: "Id of the request made"
      result:
        type: "array"
        description: "Array of results for individual records in the operation, may\
          \ be empty"
        items:
          $ref: "#/definitions/CustomObject"
      success:
        type: "boolean"
        example: false
        description: "Whether the request succeeded"
      warnings:
        type: "array"
        description: "Array of warnings given for the operation"
        items:
          $ref: "#/definitions/Warning"
    example:
      result:
      - reasons:
        - code: "code"
          message: "message"
        - code: "code"
          message: "message"
        marketoGUID: "marketoGUID"
        seq: 0
      - reasons:
        - code: "code"
          message: "message"
        - code: "code"
          message: "message"
        marketoGUID: "marketoGUID"
        seq: 0
      nextPageToken: "nextPageToken"
      requestId: "requestId"
      success: false
      warnings:
      - code: 5
        message: "message"
      - code: 5
        message: "message"
      moreResult: false
      errors:
      - code: 0
        message: "message"
      - code: 0
        message: "message"
  NamedAccount:
    type: "object"
    required:
    - "marketoGUID"
    - "seq"
    properties:
      marketoGUID:
        type: "string"
        description: "Unique GUID of the custom object records"
      reasons:
        type: "array"
        description: "List of reasons why an operation did not succeed.  Reasons are\
          \ only present in API responses and should not be submitted"
        items:
          $ref: "#/definitions/Reason"
      seq:
        type: "integer"
        format: "int32"
        description: "Integer indicating the sequence of the record in response. \
          \ This value is correlated to the order of the records included in the request\
          \ input.  Seq should only be part of responses and should not be submitted."
      status:
        type: "string"
        enum:
        - "created"
        - "updated"
        - "deleted"
        - "skipped"
        - "added"
        - "removed"
    example:
      reasons:
      - code: "code"
        message: "message"
      - code: "code"
        message: "message"
      marketoGUID: "marketoGUID"
      seq: 0
      status: "created"
  ObservableOfInputStreamRangeContent:
    type: "object"
  ImportLeadResponse:
    type: "object"
    required:
    - "batchId"
    - "numOfLeadsProcessed"
    - "status"
    properties:
      batchId:
        type: "integer"
        format: "int32"
        description: "Unique integer id of the import batch"
      importId:
        type: "string"
      message:
        type: "string"
      numOfLeadsProcessed:
        type: "integer"
        format: "int32"
        description: "Number of rows processed so far"
      numOfRowsFailed:
        type: "integer"
        format: "int32"
        description: "Number of rows failed so far"
      numOfRowsWithWarning:
        type: "integer"
        format: "int32"
        description: "Number of rows with a warning so far"
      status:
        type: "string"
        description: "Status of the batch"
    description: "Response containing import status information"
    example:
      importId: "importId"
      numOfRowsFailed: 1
      numOfLeadsProcessed: 6
      numOfRowsWithWarning: 5
      batchId: 0
      message: "message"
      status: "status"
  PushLeadToMarketoRequest:
    type: "object"
    properties:
      input:
        type: "array"
        items:
          $ref: "#/definitions/Lead"
      lookupField:
        type: "string"
      partitionName:
        type: "string"
      programName:
        type: "string"
      programStatus:
        type: "string"
      reason:
        type: "string"
      source:
        type: "string"
    example:
      lookupField: "lookupField"
      input:
      - reason:
          code: "code"
          message: "message"
        id: 0
        membership:
          isExhausted: false
          stream: "stream"
          nurtureCadence: "nurtureCadence"
          acquiredBy: false
          membershipDate: "membershipDate"
          reachedSuccess: false
          progressionStatus: "progressionStatus"
        status: "status"
      - reason:
          code: "code"
          message: "message"
        id: 0
        membership:
          isExhausted: false
          stream: "stream"
          nurtureCadence: "nurtureCadence"
          acquiredBy: false
          membershipDate: "membershipDate"
          reachedSuccess: false
          progressionStatus: "progressionStatus"
        status: "status"
      reason: "reason"
      partitionName: "partitionName"
      programName: "programName"
      source: "source"
      programStatus: "programStatus"
  ChangeLeadProgramStatusOutputData:
    type: "object"
    required:
    - "id"
    - "status"
    properties:
      id:
        type: "integer"
        format: "int64"
        description: "Unique integer id of a lead record"
      reasons:
        type: "array"
        description: "List of reasons why an operation did not succeed.  Reasons are\
          \ only present in API responses and should not be submitted"
        items:
          $ref: "#/definitions/Reason"
      status:
        type: "string"
        description: "Program status of the record.  Permissible values can be retrieve\
          \ from the Get Channel by Name API for the designated program's channel"
    example:
      reasons:
      - code: "code"
        message: "message"
      - code: "code"
        message: "message"
      id: 0
      status: "status"
  LeadChangeField:
    type: "object"
    required:
    - "id"
    - "name"
    - "newValue"
    properties:
      id:
        type: "integer"
        format: "int32"
        description: "Unique integer id of the change record"
      name:
        type: "string"
        description: "Name of the field which was changed"
      newValue:
        type: "string"
        description: "New value after the change"
      oldValue:
        type: "string"
        description: "Old value before the change"
    description: "Activity record containing information on a data value change"
    example:
      newValue: "newValue"
      name: "name"
      id: 1
      oldValue: "oldValue"
  CustomActivityTypeAttribute:
    type: "object"
    required:
    - "apiName"
    - "name"
    properties:
      apiName:
        type: "string"
        description: "API Name of the attribute"
      dataType:
        type: "string"
        description: "Data type of the attribute"
        enum:
        - "string"
        - "boolean"
        - "integer"
        - "float"
        - "link"
        - "email"
        - "currency"
        - "date"
        - "datetime"
        - "phone"
        - "text"
      description:
        type: "string"
        description: "Description of the attribute"
      isPrimary:
        type: "boolean"
        example: false
        description: "Whether the attribute is the primary attribute of the activity\
          \ type.  There may only be one primary attribute at a time"
      name:
        type: "string"
        description: "Human-readable display name of the attribute"
    example:
      apiName: "apiName"
      isPrimary: false
      dataType: "string"
      name: "name"
      description: "description"
  ResponseOfActivityType:
    type: "object"
    required:
    - "errors"
    - "requestId"
    - "result"
    - "success"
    - "warnings"
    properties:
      errors:
        type: "array"
        description: "Array of errors that occurred if the request was unsuccessful"
        items:
          $ref: "#/definitions/Error"
      moreResult:
        type: "boolean"
        example: false
        description: "Boolean indicating if there are more results in subsequent pages"
      nextPageToken:
        type: "string"
        description: "Paging token given if the result set exceeded the allowed batch\
          \ size"
      requestId:
        type: "string"
        description: "Id of the request made"
      result:
        type: "array"
        description: "Array of results for individual records in the operation, may\
          \ be empty"
        items:
          $ref: "#/definitions/ActivityType"
      success:
        type: "boolean"
        example: false
        description: "Whether the request succeeded"
      warnings:
        type: "array"
        description: "Array of warnings given for the operation"
        items:
          $ref: "#/definitions/Warning"
    example:
      result:
      - apiName: "apiName"
        primaryAttribute:
          apiName: "apiName"
          dataType: "dataType"
          name: "name"
        name: "name"
        description: "description"
        attributes:
        - apiName: "apiName"
          dataType: "dataType"
          name: "name"
        - apiName: "apiName"
          dataType: "dataType"
          name: "name"
        id: 0
      - apiName: "apiName"
        primaryAttribute:
          apiName: "apiName"
          dataType: "dataType"
          name: "name"
        name: "name"
        description: "description"
        attributes:
        - apiName: "apiName"
          dataType: "dataType"
          name: "name"
        - apiName: "apiName"
          dataType: "dataType"
          name: "name"
        id: 0
      nextPageToken: "nextPageToken"
      requestId: "requestId"
      success: false
      warnings:
      - code: 5
        message: "message"
      - code: 5
        message: "message"
      moreResult: false
      errors:
      - code: 0
        message: "message"
      - code: 0
        message: "message"
  UserCount:
    type: "object"
    required:
    - "count"
    - "userId"
    properties:
      count:
        type: "integer"
        format: "int32"
        description: "Number of calls made in the time period"
      userId:
        type: "string"
        description: "Id of the user"
    example:
      count: 5
      userId: "userId"
  InputStreamContent:
    type: "object"
    properties:
      contentType:
        type: "string"
      inputStream:
        $ref: "#/definitions/InputStream"
  SyncCompanyRequest:
    type: "object"
    properties:
      action:
        type: "string"
        description: "Type of sync operation to perform"
        enum:
        - "createOnly"
        - "updateOnly"
        - "createOrUpdate"
      dedupeBy:
        type: "string"
        description: "Field to deduplicate on.  If the value in the field for a given\
          \ record is not unique, an error will be returned for the individual record."
      input:
        type: "array"
        description: "List of input records"
        items:
          $ref: "#/definitions/Company"
    example:
      input:
      - reasons:
        - code: "code"
          message: "message"
        - code: "code"
          message: "message"
        id: 0
        seq: 6
        status: "created"
      - reasons:
        - code: "code"
          message: "message"
        - code: "code"
          message: "message"
        id: 0
        seq: 6
        status: "created"
      action: "createOnly"
      dedupeBy: "dedupeBy"
  ResponseOfSalesPerson:
    type: "object"
    required:
    - "errors"
    - "requestId"
    - "result"
    - "success"
    - "warnings"
    properties:
      errors:
        type: "array"
        description: "Array of errors that occurred if the request was unsuccessful"
        items:
          $ref: "#/definitions/Error"
      moreResult:
        type: "boolean"
        example: false
        description: "Boolean indicating if there are more results in subsequent pages"
      nextPageToken:
        type: "string"
        description: "Paging token given if the result set exceeded the allowed batch\
          \ size"
      requestId:
        type: "string"
        description: "Id of the request made"
      result:
        type: "array"
        description: "Array of results for individual records in the operation, may\
          \ be empty"
        items:
          $ref: "#/definitions/SalesPerson"
      success:
        type: "boolean"
        example: false
        description: "Whether the request succeeded"
      warnings:
        type: "array"
        description: "Array of warnings given for the operation"
        items:
          $ref: "#/definitions/Warning"
    example:
      result:
      - reasons:
        - code: "code"
          message: "message"
        - code: "code"
          message: "message"
        id: 0
        seq: 6
        status: "created"
      - reasons:
        - code: "code"
          message: "message"
        - code: "code"
          message: "message"
        id: 0
        seq: 6
        status: "created"
      nextPageToken: "nextPageToken"
      requestId: "requestId"
      success: false
      warnings:
      - code: 5
        message: "message"
      - code: 5
        message: "message"
      moreResult: false
      errors:
      - code: 0
        message: "message"
      - code: 0
        message: "message"
  ProgramMembership:
    type: "object"
    required:
    - "membershipDate"
    - "progressionStatus"
    properties:
      acquiredBy:
        type: "boolean"
        example: false
        description: "Whether the lead was acquired by the parent program"
      isExhausted:
        type: "boolean"
        example: false
        description: "Whether the lead is currently exhausted in the stream, if applicable"
      membershipDate:
        type: "string"
        description: "Date the lead first became a member of the program"
      nurtureCadence:
        type: "string"
        description: "Cadence of the parent stream if applicable"
      progressionStatus:
        type: "string"
        description: "Program status of the lead in the parent program"
      reachedSuccess:
        type: "boolean"
        example: false
        description: "Whether the lead is in a success-status in the parent program"
      stream:
        type: "string"
        description: "Stream that the lead is a member of, if the parent program is\
          \ an engagement program"
    example:
      isExhausted: false
      stream: "stream"
      nurtureCadence: "nurtureCadence"
      acquiredBy: false
      membershipDate: "membershipDate"
      reachedSuccess: false
      progressionStatus: "progressionStatus"
  RelatedObject:
    type: "object"
    properties:
      field:
        type: "string"
        description: "Foreign field to which the parent is linked"
      name:
        type: "string"
        description: "Name of the link object type"
    example:
      field: "field"
      name: "name"
  ResponseOfLeadChange:
    type: "object"
    required:
    - "errors"
    - "requestId"
    - "result"
    - "success"
    - "warnings"
    properties:
      errors:
        type: "array"
        description: "Array of errors that occurred if the request was unsuccessful"
        items:
          $ref: "#/definitions/Error"
      moreResult:
        type: "boolean"
        example: false
        description: "Boolean indicating if there are more results in subsequent pages"
      nextPageToken:
        type: "string"
        description: "Paging token given if the result set exceeded the allowed batch\
          \ size"
      requestId:
        type: "string"
        description: "Id of the request made"
      result:
        type: "array"
        description: "Array of results for individual records in the operation, may\
          \ be empty"
        items:
          $ref: "#/definitions/LeadChange"
      success:
        type: "boolean"
        example: false
        description: "Whether the request succeeded"
      warnings:
        type: "array"
        description: "Array of warnings given for the operation"
        items:
          $ref: "#/definitions/Warning"
    example:
      result:
      - activityDate: "2000-01-23T04:56:07.000+00:00"
        campaignId: 6
        attributes:
        - apiName: "apiName"
          name: "name"
          value: "{}"
        - apiName: "apiName"
          name: "name"
          value: "{}"
        id: 5
        fields:
        - newValue: "newValue"
          name: "name"
          id: 1
          oldValue: "oldValue"
        - newValue: "newValue"
          name: "name"
          id: 1
          oldValue: "oldValue"
        marketoGUID: "marketoGUID"
        activityTypeId: 0
        leadId: 5
      - activityDate: "2000-01-23T04:56:07.000+00:00"
        campaignId: 6
        attributes:
        - apiName: "apiName"
          name: "name"
          value: "{}"
        - apiName: "apiName"
          name: "name"
          value: "{}"
        id: 5
        fields:
        - newValue: "newValue"
          name: "name"
          id: 1
          oldValue: "oldValue"
        - newValue: "newValue"
          name: "name"
          id: 1
          oldValue: "oldValue"
        marketoGUID: "marketoGUID"
        activityTypeId: 0
        leadId: 5
      nextPageToken: "nextPageToken"
      requestId: "requestId"
      success: false
      warnings:
      - code: 5
        message: "message"
      - code: 5
        message: "message"
      moreResult: false
      errors:
      - code: 0
        message: "message"
      - code: 0
        message: "message"
  ExportResponse:
    type: "object"
    required:
    - "exportId"
    - "status"
    properties:
      createdAt:
        type: "string"
        format: "date-time"
        description: "Date when the export request was created"
      errorMsg:
        type: "string"
        description: "Error message in case of \"Failed\" status"
      exportId:
        type: "string"
        description: "Unique id of the export job"
      fileSize:
        type: "integer"
        format: "int64"
        description: "Size of file in bytes. This will have a value only when status\
          \ is \"Completed\", otherwise null"
      finishedAt:
        type: "string"
        format: "date-time"
        description: "Finish time of export job. This will have value only when status\
          \ is \"Completed\" or \"Failed\", otherwise null"
      format:
        type: "string"
        description: "Format of file as given in the request (\"CSV\", \"TSV\", \"\
          SSV\")"
      numberOfRecords:
        type: "integer"
        format: "int64"
        description: "Number of records in the export file.  This will have value\
          \ only when status is \"Completed\", otherwise null"
      queuedAt:
        type: "string"
        format: "date-time"
        description: "Queue time of export job. This will have value when \"Queued\"\
          \ status is reached, before that null"
      startedAt:
        type: "string"
        format: "date-time"
        description: "Start time of export job. This will have value when \"Processing\"\
          \ status is reached, before that null"
      status:
        type: "string"
        description: "Status of the export job (\"Created\",\"Queued\",\"Processing\"\
          ,\"Canceled\",\"Completed\",\"Failed\")"
    description: "Response containing export job status information"
    example:
      createdAt: "2000-01-23T04:56:07.000+00:00"
      queuedAt: "2000-01-23T04:56:07.000+00:00"
      fileSize: 6
      numberOfRecords: 1
      format: "format"
      startedAt: "2000-01-23T04:56:07.000+00:00"
      exportId: "exportId"
      errorMsg: "errorMsg"
      finishedAt: "2000-01-23T04:56:07.000+00:00"
      status: "status"
  ResponseOfCustomActivity:
    type: "object"
    required:
    - "errors"
    - "requestId"
    - "result"
    - "success"
    - "warnings"
    properties:
      errors:
        type: "array"
        description: "Array of errors that occurred if the request was unsuccessful"
        items:
          $ref: "#/definitions/Error"
      moreResult:
        type: "boolean"
        example: false
        description: "Boolean indicating if there are more results in subsequent pages"
      nextPageToken:
        type: "string"
        description: "Paging token given if the result set exceeded the allowed batch\
          \ size"
      requestId:
        type: "string"
        description: "Id of the request made"
      result:
        type: "array"
        description: "Array of results for individual records in the operation, may\
          \ be empty"
        items:
          $ref: "#/definitions/CustomActivity"
      success:
        type: "boolean"
        example: false
        description: "Whether the request succeeded"
      warnings:
        type: "array"
        description: "Array of warnings given for the operation"
        items:
          $ref: "#/definitions/Warning"
    example:
      result:
      - apiName: "apiName"
        activityDate: "activityDate"
        attributes:
        - apiName: "apiName"
          name: "name"
          value: "{}"
        - apiName: "apiName"
          name: "name"
          value: "{}"
        id: 6
        marketoGUID: "marketoGUID"
        primaryAttributeValue: "primaryAttributeValue"
        errors:
        - code: 0
          message: "message"
        - code: 0
          message: "message"
        activityTypeId: 0
        leadId: 1
        status: "created"
      - apiName: "apiName"
        activityDate: "activityDate"
        attributes:
        - apiName: "apiName"
          name: "name"
          value: "{}"
        - apiName: "apiName"
          name: "name"
          value: "{}"
        id: 6
        marketoGUID: "marketoGUID"
        primaryAttributeValue: "primaryAttributeValue"
        errors:
        - code: 0
          message: "message"
        - code: 0
          message: "message"
        activityTypeId: 0
        leadId: 1
        status: "created"
      nextPageToken: "nextPageToken"
      requestId: "requestId"
      success: false
      warnings:
      - code: 5
        message: "message"
      - code: 5
        message: "message"
      moreResult: false
      errors:
      - code: 0
        message: "message"
      - code: 0
        message: "message"
  LookupCustomObjectRequest:
    type: "object"
    properties:
      batchSize:
        type: "integer"
        format: "int32"
        description: "Maximum number of records to return in the response.  Max and\
          \ default is 300"
      fields:
        type: "array"
        description: "Comma-separated list of fields to include in the response"
        items:
          type: "string"
      filterType:
        type: "string"
        description: "Field to search on"
      input:
        type: "array"
        description: "Input list of records.  When using a single key, the list is\
          \ a comma-separated list of values.  When using a compound key, the request\
          \ must be sent as a JSON object, and each record must include each of the\
          \ fields in the compound key.  Compound keys are determined by the contents\
          \ of \"dedupeFields\" in the describe result for the object"
        items:
          $ref: "#/definitions/CustomObject"
      nextPageToken:
        type: "string"
        description: "Paging token returned from a previous response"
    example:
      input:
      - reasons:
        - code: "code"
          message: "message"
        - code: "code"
          message: "message"
        marketoGUID: "marketoGUID"
        seq: 0
      - reasons:
        - code: "code"
          message: "message"
        - code: "code"
          message: "message"
        marketoGUID: "marketoGUID"
        seq: 0
      nextPageToken: "nextPageToken"
      batchSize: 0
      fields:
      - "fields"
      - "fields"
      filterType: "filterType"
  Company:
    type: "object"
    required:
    - "id"
    - "seq"
    properties:
      id:
        type: "integer"
        format: "int64"
        description: "Unique integer id of the company record"
      reasons:
        type: "array"
        items:
          $ref: "#/definitions/Reason"
      seq:
        type: "integer"
        format: "int32"
        description: "Integer indicating the sequence of the record in response. \
          \ This value is correlated to the order of the records included in the request\
          \ input.  Seq should only be part of responses and should not be submitted."
      status:
        type: "string"
        description: "Status of the operation performed on the record"
        enum:
        - "created"
        - "updated"
        - "deleted"
        - "skipped"
        - "added"
        - "removed"
    description: "Company record.  May include any additional fields listed in the\
      \ corresponding describe method"
    example:
      reasons:
      - code: "code"
        message: "message"
      - code: "code"
        message: "message"
      id: 0
      seq: 6
      status: "created"
  Reason:
    type: "object"
    required:
    - "code"
    - "message"
    properties:
      code:
        type: "string"
        description: "Integer code of the reason"
      message:
        type: "string"
        description: "Message describing the reason for the status of the operation"
    example:
      code: "code"
      message: "message"
  FileRange:
    type: "object"
    properties:
      end:
        type: "integer"
        format: "int64"
      start:
        type: "integer"
        format: "int64"
  ObservableOfInputStreamContent:
    type: "object"
  ErrorCount:
    type: "object"
    required:
    - "count"
    - "errorCode"
    properties:
      count:
        type: "integer"
        format: "int32"
        description: "Number of occurences of the error"
      errorCode:
        type: "string"
        description: "Integer error code of the error"
    example:
      count: 6
      errorCode: "errorCode"
  LeadMapAttribute:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        description: "Name of the attribute"
      readOnly:
        type: "boolean"
        example: false
        description: "Whether the attribute is read only"
    example:
      name: "name"
      readOnly: false
  LeadLookupInputData:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        format: "int64"
        description: "Unique integer id of a lead record"
    example:
      id: 0
  SalesPerson:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        description: "Unique integer id of the salesperson record"
      reasons:
        type: "array"
        description: "List of reasons why an operation did not succeed.  Reasons are\
          \ only present in API responses and should not be submitted"
        items:
          $ref: "#/definitions/Reason"
      seq:
        type: "integer"
        format: "int32"
        description: "Integer indicating the sequence of the record in response. \
          \ This value is correlated to the order of the records included in the request\
          \ input.  Seq should only be part of responses and should not be submitted."
      status:
        type: "string"
        description: "Status of the operation performed on the record"
        enum:
        - "created"
        - "updated"
        - "deleted"
        - "skipped"
        - "added"
        - "removed"
    example:
      reasons:
      - code: "code"
        message: "message"
      - code: "code"
        message: "message"
      id: 0
      seq: 6
      status: "created"
  RemoveNamedAccountListMemberRequest:
    type: "object"
    required:
    - "input"
    properties:
      input:
        type: "array"
        description: "List of input records"
        items:
          $ref: "#/definitions/NamedAccount"
    example:
      input:
      - reasons:
        - code: "code"
          message: "message"
        - code: "code"
          message: "message"
        marketoGUID: "marketoGUID"
        seq: 0
        status: "created"
      - reasons:
        - code: "code"
          message: "message"
        - code: "code"
          message: "message"
        marketoGUID: "marketoGUID"
        seq: 0
        status: "created"
  Token:
    type: "object"
    required:
    - "name"
    - "value"
    properties:
      name:
        type: "string"
        description: "Name of the token.  Should be formatted as \"{{my.name}}\""
      value:
        type: "string"
        description: "Value of the token"
    example:
      name: "name"
      value: "value"
  Error:
    type: "object"
    required:
    - "code"
    - "message"
    properties:
      code:
        type: "integer"
        format: "int32"
        description: "Integer error code of the error"
      message:
        type: "string"
        description: "Message describing the cause of the Error"
    example:
      code: 0
      message: "message"
  ExportLeadFilter:
    type: "object"
    required:
    - "createdAt"
    - "smartListId"
    - "smartListName"
    - "staticListId"
    - "staticListName"
    - "updatedAt"
    properties:
      createdAt:
        description: "Date range to filter new leads on"
        $ref: "#/definitions/DateRange"
      smartListId:
        type: "integer"
        format: "int32"
        description: "Id of smart list to retrieve leads from"
      smartListName:
        type: "string"
        description: "Name of smart list to retrieve leads from"
      staticListId:
        type: "integer"
        format: "int32"
        description: "Id of static list to retrieve leads from"
      staticListName:
        type: "string"
        description: "Name of static list to retrieve leads from"
      updatedAt:
        description: "Date range to filter updated leads on"
        $ref: "#/definitions/DateRange"
    example:
      createdAt:
        endAt: "endAt"
        startAt: "startAt"
      staticListId: 6
      staticListName: "staticListName"
      smartListId: 0
      smartListName: "smartListName"
      updatedAt:
        endAt: "endAt"
        startAt: "startAt"
  InputStreamRangeContent:
    type: "object"
    properties:
      contentType:
        type: "string"
      fileRange:
        $ref: "#/definitions/FileRange"
      inputStream:
        $ref: "#/definitions/InputStream"
      length:
        type: "integer"
        format: "int64"
  DeleteCompanyRequest:
    type: "object"
    properties:
      deleteBy:
        type: "string"
        description: "Field to delete company records by.  Key may be \"dedupeFields\"\
          \ or \"idField\""
      input:
        type: "array"
        description: "List of company records. Companies in the list should only contain\
          \ a member matching the dedupeBy value"
        items:
          $ref: "#/definitions/Company"
    example:
      input:
      - reasons:
        - code: "code"
          message: "message"
        - code: "code"
          message: "message"
        id: 0
        seq: 6
        status: "created"
      - reasons:
        - code: "code"
          message: "message"
        - code: "code"
          message: "message"
        id: 0
        seq: 6
        status: "created"
      deleteBy: "deleteBy"
  ResponseOfImportCustomObjectResponse:
    type: "object"
    required:
    - "errors"
    - "requestId"
    - "result"
    - "success"
    - "warnings"
    properties:
      errors:
        type: "array"
        description: "Array of errors that occurred if the request was unsuccessful"
        items:
          $ref: "#/definitions/Error"
      moreResult:
        type: "boolean"
        example: false
        description: "Boolean indicating if there are more results in subsequent pages"
      nextPageToken:
        type: "string"
        description: "Paging token given if the result set exceeded the allowed batch\
          \ size"
      requestId:
        type: "string"
        description: "Id of the request made"
      result:
        type: "array"
        description: "Array of results for individual records in the operation, may\
          \ be empty"
        items:
          $ref: "#/definitions/ImportCustomObjectResponse"
      success:
        type: "boolean"
        example: false
        description: "Whether the request succeeded"
      warnings:
        type: "array"
        description: "Array of warnings given for the operation"
        items:
          $ref: "#/definitions/Warning"
    example:
      result:
      - numOfRowsFailed: 1
        numOfRowsWithWarning: 5
        objectApiName: "objectApiName"
        batchId: 0
        message: "message"
        numOfObjectsProcessed: 6
        operation: "operation"
        importTime: "importTime"
        status: "status"
      - numOfRowsFailed: 1
        numOfRowsWithWarning: 5
        objectApiName: "objectApiName"
        batchId: 0
        message: "message"
        numOfObjectsProcessed: 6
        operation: "operation"
        importTime: "importTime"
        status: "status"
      nextPageToken: "nextPageToken"
      requestId: "requestId"
      success: false
      warnings:
      - code: 5
        message: "message"
      - code: 5
        message: "message"
      moreResult: false
      errors:
      - code: 0
        message: "message"
      - code: 0
        message: "message"
  CustomObject:
    type: "object"
    required:
    - "marketoGUID"
    - "seq"
    properties:
      marketoGUID:
        type: "string"
        description: "Unique GUID of the custom object records"
      reasons:
        type: "array"
        items:
          $ref: "#/definitions/Reason"
      seq:
        type: "integer"
        format: "int32"
        description: "Integer indicating the sequence of the record in response. \
          \ This value is correlated to the order of the records included in the request\
          \ input.  Seq should only be part of responses and should not be submitted."
    example:
      reasons:
      - code: "code"
        message: "message"
      - code: "code"
        message: "message"
      marketoGUID: "marketoGUID"
      seq: 0
  ExportActivityRequest:
    type: "object"
    required:
    - "fields"
    - "filter"
    properties:
      columnHeaderNames:
        description: "File header field names override (corresponds with REST API\
          \ name)"
        $ref: "#/definitions/ColumnHeaderNames"
      fields:
        type: "array"
        description: "Comma-separated list of fields to include in the file"
        items:
          type: "string"
      filter:
        description: "Record selection criteria. \"createAt\" is required, \"activityTypeIds\"\
          \ is optional"
        $ref: "#/definitions/ExportActivityFilter"
      format:
        type: "string"
        description: "File format to create(\"CSV\", \"TSV\", \"SSV\").  Default is\
          \ \"CSV\""
    example:
      filter:
        createdAt:
          endAt: "endAt"
          startAt: "startAt"
        activityTypeIds:
        - 0
        - 0
      columnHeaderNames: {}
      format: "format"
      fields:
      - "fields"
      - "fields"
  UsageData:
    type: "object"
    required:
    - "date"
    properties:
      count:
        type: "integer"
        format: "int32"
        description: "Number of calls made in the time period"
      date:
        type: "string"
        format: "date-time"
        description: "Date of the collected calls"
      errors:
        type: "array"
        description: "Counts for individual error codes"
        items:
          $ref: "#/definitions/ErrorCount"
      total:
        type: "integer"
        format: "int32"
        description: "Total number of errors in the time period"
      users:
        type: "array"
        description: "Counts for individual users"
        items:
          $ref: "#/definitions/UserCount"
    example:
      date: "2000-01-23T04:56:07.000+00:00"
      total: 1
      count: 0
      errors:
      - count: 6
        errorCode: "errorCode"
      - count: 6
        errorCode: "errorCode"
      users:
      - count: 5
        userId: "userId"
      - count: 5
        userId: "userId"
  StaticList:
    type: "object"
    required:
    - "createdAt"
    - "id"
    - "name"
    - "updatedAt"
    properties:
      createdAt:
        type: "string"
        description: "Datetime when the list was created"
      description:
        type: "string"
        description: "Description of the static list"
      id:
        type: "integer"
        format: "int32"
        description: "Unique integer id of the static list"
      name:
        type: "string"
        description: "Name of the static list"
      programName:
        type: "string"
        description: "Name of the program"
      updatedAt:
        type: "string"
        description: "Datetime when the list was most recently updated"
      workspaceName:
        type: "string"
        description: "Name of the parent workspace, if applicable"
    example:
      createdAt: "createdAt"
      programName: "programName"
      name: "name"
      description: "description"
      workspaceName: "workspaceName"
      id: 0
      updatedAt: "updatedAt"
  CustomActivity:
    type: "object"
    required:
    - "activityDate"
    - "activityTypeId"
    - "attributes"
    - "errors"
    - "id"
    - "leadId"
    - "primaryAttributeValue"
    properties:
      activityDate:
        type: "string"
        description: "Datetime of the activity"
      activityTypeId:
        type: "integer"
        format: "int32"
        description: "Id of the activity type"
      apiName:
        type: "string"
      attributes:
        type: "array"
        description: "List of secondary attributes"
        items:
          $ref: "#/definitions/Attribute"
      errors:
        type: "array"
        description: "Array of errors that occurred if the request was unsuccessful"
        items:
          $ref: "#/definitions/Error"
      id:
        type: "integer"
        format: "int64"
        description: "Integer id of the activity.  For instances which have been migrated\
          \ to Activity Service, this field may not be present, and should not be\
          \ treated as unique."
      leadId:
        type: "integer"
        format: "int64"
        description: "Id of the lead associated to the activity"
      marketoGUID:
        type: "string"
        description: "Unique id of the activity (128 character string)"
      primaryAttributeValue:
        type: "string"
        description: "Value of the primary attribute"
      status:
        type: "string"
        description: "Status of the operation performed on the record"
        enum:
        - "created"
        - "updated"
        - "deleted"
        - "skipped"
        - "added"
        - "removed"
    example:
      apiName: "apiName"
      activityDate: "activityDate"
      attributes:
      - apiName: "apiName"
        name: "name"
        value: "{}"
      - apiName: "apiName"
        name: "name"
        value: "{}"
      id: 6
      marketoGUID: "marketoGUID"
      primaryAttributeValue: "primaryAttributeValue"
      errors:
      - code: 0
        message: "message"
      - code: 0
        message: "message"
      activityTypeId: 0
      leadId: 1
      status: "created"
  SyncNamedAccountListRequest:
    type: "object"
    required:
    - "input"
    properties:
      action:
        type: "string"
        description: "Type of sync operation to perform"
        enum:
        - "createOnly"
        - "updateOnly"
      dedupeBy:
        type: "string"
        description: "Field to deduplicate on.  If the value in the field for a given\
          \ record is not unique, an error will be returned for the individual record."
      input:
        type: "array"
        description: "List of input records"
        items:
          $ref: "#/definitions/NamedAccountList"
    example:
      input:
      - createdAt: "createdAt"
        updateable: false
        reasons:
        - code: "code"
          message: "message"
        - code: "code"
          message: "message"
        name: "name"
        marketoGUID: "marketoGUID"
        type: "type"
        seq: 0
        status: "created"
        updatedAt: "updatedAt"
      - createdAt: "createdAt"
        updateable: false
        reasons:
        - code: "code"
          message: "message"
        - code: "code"
          message: "message"
        name: "name"
        marketoGUID: "marketoGUID"
        type: "type"
        seq: 0
        status: "created"
        updatedAt: "updatedAt"
      action: "createOnly"
      dedupeBy: "dedupeBy"
  ScheduleCampaignData:
    type: "object"
    properties:
      cloneToProgramName:
        type: "string"
        description: "Name of the resulting program.  When set, this attribute will\
          \ cause the campaign, parent program, and all of its assets, to be created\
          \ with the resulting new name.  The parent program will be cloned and the\
          \ newly created campaign will be scheduled.  The resulting program is created\
          \ underneath the parent.  Programs with snippets, push notifications, in-app\
          \ messages, static lists, reports, and social assets may not be cloned in\
          \ this way"
      runAt:
        type: "string"
        format: "date-time"
        description: "Datetime to run the campaign at.  If unset, the campaign will\
          \ be run five minutes after the call is made"
      tokens:
        type: "array"
        description: "List of my tokens to replace during the run of the target campaign.\
          \  The tokens must be available in a parent program or folder to be replaced\
          \ during the run"
        items:
          $ref: "#/definitions/Token"
    example:
      runAt: "2000-01-23T04:56:07.000+00:00"
      cloneToProgramName: "cloneToProgramName"
      tokens:
      - name: "name"
        value: "value"
      - name: "name"
        value: "value"
  ObjectField:
    type: "object"
    properties:
      dataType:
        type: "string"
        description: "Datatype of the field"
      displayName:
        type: "string"
        description: "UI display-name of the field"
      length:
        type: "integer"
        format: "int32"
        description: "Max length of the field.  Only applicable to text, string, and\
          \ text area."
      name:
        type: "string"
        description: "Name of the field"
      updateable:
        type: "boolean"
        example: false
        description: "Whether the field is updateable"
    example:
      updateable: false
      displayName: "displayName"
      dataType: "dataType"
      length: 0
      name: "name"
  ColumnHeaderNames:
    type: "object"
  DeleteCustomObjectRequest:
    type: "object"
    required:
    - "input"
    properties:
      deleteBy:
        type: "string"
        description: "Field to delete records by.  Permissible values are idField\
          \ or dedupeFields as indicated by the result of the corresponding describe\
          \ record"
      input:
        type: "array"
        description: "List of input records"
        items:
          $ref: "#/definitions/CustomObject"
    example:
      input:
      - reasons:
        - code: "code"
          message: "message"
        - code: "code"
          message: "message"
        marketoGUID: "marketoGUID"
        seq: 0
      - reasons:
        - code: "code"
          message: "message"
        - code: "code"
          message: "message"
        marketoGUID: "marketoGUID"
        seq: 0
      deleteBy: "deleteBy"
  UpdateLeadPartitionRequest:
    type: "object"
    required:
    - "input"
    properties:
      input:
        type: "array"
        description: "List of leads for input"
        items:
          $ref: "#/definitions/Lead"
    example:
      input:
      - reason:
          code: "code"
          message: "message"
        id: 0
        membership:
          isExhausted: false
          stream: "stream"
          nurtureCadence: "nurtureCadence"
          acquiredBy: false
          membershipDate: "membershipDate"
          reachedSuccess: false
          progressionStatus: "progressionStatus"
        status: "status"
      - reason:
          code: "code"
          message: "message"
        id: 0
        membership:
          isExhausted: false
          stream: "stream"
          nurtureCadence: "nurtureCadence"
          acquiredBy: false
          membershipDate: "membershipDate"
          reachedSuccess: false
          progressionStatus: "progressionStatus"
        status: "status"
